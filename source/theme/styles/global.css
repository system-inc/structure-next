/* Point to the Tailwind configuration file (required in v4) */
@config '../../../../../tailwind.config.mts';

/* Tailwind CSS v4 Import */
@import 'tailwindcss';

/* Import CSS variables */
@import './variables.css';

/* Import tw-animate-css (Tailwind v4 compatible animations) */
@import 'tw-animate-css';

/* Import utilities */
@import './utilities.css';

/* Import animations */
@import './animations.css';

@layer base {
    body {
        /* Enables OpenType font features for improved typography */
        /* 'rlig' 1: Required ligatures (letterform combinations) */
        /* 'calt' 1: Contextual alternates (context-dependent glyph variants) */
        /* Improves readability and aesthetics of text */
        /* Common in design systems for refined typography appearance */
        font-feature-settings:
            'rlig' 1,
            'calt' 1;
    }

    strong {
        /* Use medium weight (500) for strong text instead of browser default bold (700) */
        font-weight: 500;
    }

    /* Heading Typography - Consistent sizing and weight across all heading levels */
    h1 {
        font-size: 24px;
        font-weight: 500;
    }

    h2 {
        font-size: 20px;
        font-weight: 500;
    }

    h3 {
        font-size: 18px;
        font-weight: 500;
    }

    h4 {
        font-size: 16px;
        font-weight: 500;
    }

    h5 {
        font-size: 16px;
        font-weight: 400;
    }

    h6 {
        font-size: 16px;
        font-weight: 300;
    }
}

/* Class to allow full width and height for the ScrollArea component */
/* Fix for RadixScrollArea */
.scroll-area-viewport > :first-child {
    height: 100%;
    width: 100%;
    table-layout: fixed;
}

/* Form inputs autofilled by the browser are styled in undesirable ways */
/* This hack delays the style transitions */
/* It requires that we set a key={theme} on React components */
/* such that the component is re-rendered when the theme changes */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
    transition:
        background-color 99999s,
        color 99999s;
    transition-delay: 99999s;
}

/* Calendar and InputTimeRange - react-day-picker single day selection fix */
/* When a single day is selected in range mode, react-day-picker applies both rdp-range_start */
/* and rdp-range_end classes to the td, causing conflicting border-radius rules on the button */
/* (rounded-l-none + rounded-r-none = no rounding). We override this with rdp-single_day class. */
td.rdp-single_day > button {
    border-radius: calc(var(--radius) - 2px) !important;
}

td.rdp-single_day > button:hover {
    border-radius: calc(var(--radius) - 2px) !important;
}
