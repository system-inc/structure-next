schema {
    query: Query
    mutation: Mutation
}

"""
The operator of a field filter
"""
enum ColumnFilterConditionOperator {
    Equal
    GreaterThan
    GreaterThanOrEqual
    In
    IsNotNull
    IsNull
    LessThan
    LessThanOrEqual
    Like
    NotEqual
    NotIn
    NotLike
}

input ColumnFilterInput {
    caseSensitive: Boolean
    column: String!
    operator: ColumnFilterConditionOperator!
    value: JSON!
}

type ContactList {
    createdAt: DateTimeISO!
    createdByAccountId: String!
    createdByProfileId: String!
    description: String
    id: String!
    identifier: String!
    title: String!
    updatedAt: DateTimeISO!
    updatedByAccountId: String
    updatedByProfileId: String
    userEnrolled: Boolean
}

input ContactListCreationInput {
    description: String
    identifier: String
    title: String!
}

type ContactListEntry {
    accountId: String
    contactList: ContactList
    contactListId: String!
    countryCode: String
    createdAt: DateTimeISO!
    emailAddress: String!
    id: String!
    ipAddress: String
    lastContactedAt: DateTimeISO
    name: String
    profileId: String
    updatedAt: DateTimeISO!
    userAgent: String
    userUnsubscribed: Boolean!
}

input ContactListEntryCreatePrivilegedInput {
    contactListId: String!
    emailAddress: String!
    name: String
}

input ContactListEntryInput {
    contactListIdentifier: String!
    emailAddress: String!
    name: String
}

type ContactListResult {
    items: [ContactList!]!
    pagination: Pagination!
}

input ContactListUpdateInput {
    description: String
    id: String
    identifier: String
    title: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
    contactListCreatePrivileged(data: ContactListCreationInput!): ContactList!
    contactListDeletePrivileged(forceDelete: Boolean, id: String!): OperationResult!
    contactListEntryCreate(data: ContactListEntryInput!): ContactListEntry!
    contactListEntryCreatePrivileged(data: ContactListEntryCreatePrivilegedInput!): ContactListEntry!
    contactListEntryUnsubscribe(contactListIdentifier: String!, emailAddress: String!, reason: String): OperationResult!
    contactListUpdatePrivileged(input: ContactListUpdateInput!): ContactList!
}

type OperationResult {
    success: Boolean!
}

"""
The order direction of a query
"""
enum OrderByDirection {
    Ascending
    Descending
}

input OrderByInput {
    direction: OrderByDirection
    key: String!
}

type Pagination {
    itemIndex: Int!
    itemIndexForNextPage: Int
    itemIndexForPreviousPage: Int
    itemsPerPage: Int!
    itemsTotal: Int!
    page: Int!
    pagesTotal: Int!
}

input PaginationInput {
    filters: [ColumnFilterInput!]
    itemIndex: Int
    itemsPerPage: Int!
    orderBy: [OrderByInput!]
}

type Query {
    contactLists(pagination: PaginationInput!): ContactListResult!
    contactListsPrivileged(pagination: PaginationInput!): ContactListResult!
}
