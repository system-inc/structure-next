/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    'mutation AccountAuthenticationRegistrationOrSignInCreate($input: AccountRegistrationOrSignInCreateInput!) {\n  accountAuthenticationRegistrationOrSignInCreate(input: $input) {\n    emailAddress\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery AccountAuthentication {\n  accountAuthentication {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountAuthenticationEmailVerification {\n  accountAuthenticationEmailVerification {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationSend {\n  accountAuthenticationEmailVerificationSend {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationVerify($input: AccountEmailVerificationVerifyInput!) {\n  accountAuthenticationEmailVerificationVerify(input: $input) {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationPasswordVerify($input: AccountPasswordVerifyInput!) {\n  accountAuthenticationPasswordVerify(input: $input) {\n    success\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountMaintenanceSessionCreate {\n  accountMaintenanceSessionCreate {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation AccountAuthenticationRegistrationComplete($input: AccountRegistrationCompleteInput!) {\n  accountAuthenticationRegistrationComplete(input: $input) {\n    success\n  }\n}\n\nmutation AccountAuthenticationSignInComplete {\n  accountAuthenticationSignInComplete {\n    success\n  }\n}\n\nmutation AccountPasswordUpdate($input: AccountPasswordUpdateInput!) {\n  accountPasswordUpdate(input: $input) {\n    success\n  }\n}\n\nmutation AccountSignOut {\n  accountSignOut {\n    success\n  }\n}\n\nquery Account {\n  account {\n    emailAddress\n    profile {\n      id\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountPrivileged($input: AccountInput!) {\n  accountPrivileged(input: $input) {\n    emailAddress\n    profiles {\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountsPrivileged($pagination: PaginationInput!) {\n  accountsPrivileged(pagination: $pagination) {\n    items {\n      emailAddress\n      profiles {\n        username\n        displayName\n        givenName\n        familyName\n        countryCode\n        images {\n          url\n          variant\n        }\n        updatedAt\n        createdAt\n      }\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nquery AccountProfileUsernameValidate($username: String!) {\n  accountProfileUsernameValidate(username: $username)\n}\n\nquery AccountEnrolledChallenges {\n  account {\n    enrolledChallenges\n  }\n}\n\nmutation AccountProfileUpdate($input: AccountProfileUpdateInput!) {\n  accountProfileUpdate(input: $input) {\n    username\n    displayName\n    givenName\n    familyName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountProfilePublic($username: String!) {\n  accountProfilePublic(username: $username) {\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    createdAt\n  }\n}\n\nquery AccountAccessRolesPrivileged {\n  accountAccessRolesPrivileged {\n    id\n    type\n    description\n  }\n}\n\nquery AccountAccessRoleAssignmentsPrivileged($statuses: [AccessRoleStatus!], $pagination: PaginationInput!) {\n  accountAccessRoleAssignmentsPrivileged(\n    statuses: $statuses\n    pagination: $pagination\n  ) {\n    items {\n      id\n      accessRole {\n        id\n        type\n        description\n      }\n      status\n      emailAddress\n      profile {\n        username\n        displayName\n        images {\n          url\n          variant\n        }\n        createdAt\n      }\n      expiresAt\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nmutation AccountAccessRoleAssignmentRevokePrivileged($input: AccessRoleAssignmentRevokeInput!) {\n  accountAccessRoleAssignmentRevokePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountAccessRoleAssignmentCreatePrivileged($input: AccessRoleAssignmentCreateInput!) {\n  accountAccessRoleAssignmentCreatePrivileged(input: $input) {\n    id\n    accessRole {\n      id\n      type\n      description\n    }\n    status\n    profile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n      createdAt\n    }\n    expiresAt\n    createdAt\n    updatedAt\n  }\n}\n\nmutation AccountDelete($reason: String) {\n  accountDelete(reason: $reason) {\n    success\n  }\n}\n\nmutation AccountDeletePrivileged($input: AccountDeleteInput!) {\n  accountDeletePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountProfileImageRemove {\n  accountProfileImageRemove {\n    id\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}': typeof types.AccountAuthenticationRegistrationOrSignInCreateDocument;
    'mutation CommerceCheckoutSessionCreateDirect($input: CommerceCheckoutSessionCreateDirectInput!) {\n  commerceCheckoutSessionCreateDirect(input: $input) {\n    id\n    externalMetadata\n    createdAt\n  }\n}\n\nquery CommerceOrdersByCheckoutSession($checkoutSessionId: String!) {\n  commerceOrdersByCheckoutSession(checkoutSessionId: $checkoutSessionId) {\n    ... on CommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      createdAt\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrders($pagination: PaginationInput!) {\n  commerceOrders(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        amount\n        originalSubtotal\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery CommerceOrder($orderIdentifier: String!) {\n  commerceOrder(identifier: $orderIdentifier) {\n    ... on CommerceOrder {\n      identifier\n      status\n      statusRecords {\n        status\n        timestamp\n        description\n      }\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        indexId\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shipments {\n        id\n        orderIndexId\n        status\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        packageInfo {\n          items {\n            indexId\n            quantity\n          }\n        }\n        shippedAt\n        deliveredAt\n        cancelledAt\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n      appliedDiscounts {\n        amount\n        code\n      }\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrdersPrivileged($pagination: PaginationInput!) {\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      createdAt\n      emailAddress\n      fulfillmentSource\n      fulfillmentStatus\n      id\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      metadata\n      payment {\n        amount\n        authorizedAt\n        cancelledAt\n        capturedAt\n        confirmedAt\n        createdAt\n        currencyCode\n        externalReferenceId\n        id\n        paymentMethod {\n          externalResourceId\n          paymentProcessorType\n          type\n          ... on PaymentMethodCreditCard {\n            externalResourceId\n            billingAddress {\n              city\n              company\n              country\n              firstName\n              lastName\n              line1\n              line2\n              postalCode\n              state\n              phoneNumber\n            }\n            cardType\n            expirationMonth\n            expirationYear\n            last4\n            paymentProcessorType\n            type\n          }\n          ... on PaymentMethodAppleInAppPurchase {\n            externalResourceId\n            paymentProcessorType\n            type\n          }\n        }\n        paymentProcessorType\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        originalSubtotal\n        shippingRate {\n          amount\n          originalAmount\n        }\n        subtotal\n        tax {\n          shipping\n          total\n        }\n      }\n      shipments {\n        cancelledAt\n        createdAt\n        createdByAccountId\n        createdByProfileId\n        deliveredAt\n        deliveryStatus\n        id\n        orderIndexId\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        shippedAt\n        source\n        status\n        toAddress {\n          city\n          company\n          country\n          firstName\n          lastName\n          line1\n          line2\n          phoneNumber\n          state\n          postalCode\n        }\n        updatedAt\n        updatedByAccountId\n        updatedByProfileId\n      }\n      shippingInfo {\n        shippingAddress {\n          city\n          country\n          company\n          lastName\n          firstName\n          line1\n          line2\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n      source\n      status\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}': typeof types.CommerceCheckoutSessionCreateDirectDocument;
    'query DataInteractionDatabases($pagination: PaginationInput!) {\n  dataInteractionDatabases(pagination: $pagination) {\n    items {\n      databaseName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTable($databaseName: String!, $tableName: String!) {\n  dataInteractionDatabaseTable(databaseName: $databaseName, tableName: $tableName) {\n    databaseName\n    tableName\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      type\n      tableName\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableMetrics($input: DataInteractionDatabaseTableMetricsQueryInput!) {\n  dataInteractionDatabaseTableMetrics(input: $input) {\n    timeInterval\n    data\n  }\n}\n\nquery DataInteractionDatabaseTables($databaseName: String, $pagination: PaginationInput!) {\n  dataInteractionDatabaseTables(\n    databaseName: $databaseName\n    pagination: $pagination\n  ) {\n    items {\n      databaseName\n      tableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableRows($databaseName: String!, $tableName: String!, $pagination: PaginationInput!, $filters: ColumnFilterGroupInput) {\n  dataInteractionDatabaseTableRows(\n    databaseName: $databaseName\n    tableName: $tableName\n    pagination: $pagination\n    filters: $filters\n  ) {\n    items\n    databaseName\n    tableName\n    rowCount\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      tableName\n      type\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}': typeof types.DataInteractionDatabasesDocument;
    'mutation EngagementEventCreate($input: CreateEngagementEventInput!) {\n  engagementEventCreate(input: $input) {\n    success\n  }\n}\n\nmutation EngagementEventsCreate($input: [CreateEngagementEventInput!]!) {\n  engagementEventsCreate(inputs: $input) {\n    success\n  }\n}\n\nquery EngagementOverview {\n  engagementOverview {\n    uniqueDeviceIds\n    views {\n      uniqueDeviceCount\n      viewIdentifier\n    }\n    locations {\n      uniqueDeviceCount\n      countryCode\n      latitude\n      longitude\n    }\n    deviceCategoryPercentages\n  }\n}': typeof types.EngagementEventCreateDocument;
    'query Form($identifier: String!) {\n  form(identifier: $identifier) {\n    identifier\n    title\n    description\n    status\n    metadata {\n      theme {\n        backgroundColor\n        primaryColor\n        header {\n          fontFamily\n          fontSize\n        }\n        question {\n          fontFamily\n          fontSize\n        }\n        text {\n          fontFamily\n          fontSize\n        }\n      }\n    }\n    components {\n      ... on FormComponentDataCheckbox {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        maxSelections\n      }\n      ... on FormComponentDataCheckboxGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n        maxSelectionsPerRow\n        allowEmpty\n      }\n      ... on FormComponentDataDate {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialDate\n        minDate\n        maxDate\n      }\n      ... on FormComponentDataDropdown {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        placeholder\n        defaultOption\n      }\n      ... on FormComponentDataLinearScale {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        min\n        max\n        step\n        leftLabel\n        rightLabel\n      }\n      ... on FormComponentDataMultipleChoice {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        defaultOption\n      }\n      ... on FormComponentDataMultipleChoiceGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n      }\n      ... on FormComponentDataParagraph {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataRating {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        icon\n        max\n        allowHalf\n        allowZero\n      }\n      ... on FormComponentDataSectionHeader {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n      ... on FormComponentDataShortAnswer {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataTime {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialTime\n        minTime\n        maxTime\n        allowSeconds\n        ampm\n      }\n      ... on FormComponentDataTitleAndDescription {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation SubmitForm($identifier: String!, $emailAddress: String, $data: JSON!) {\n  submitForm(identifier: $identifier, emailAddress: $emailAddress, data: $data) {\n    id\n    formId\n  }\n}': typeof types.FormDocument;
    'query Posts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery PostsMine($pagination: PaginationInput!) {\n  postsMine(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery Post($identifier: String!) {\n  post(identifier: $identifier) {\n    id\n    identifier\n    slug\n    status\n    title\n    createdByProfileId\n    createdByProfile {\n      displayName\n      username\n      images {\n        url\n        type\n        variant\n      }\n    }\n    content\n    topics {\n      id\n      title\n    }\n    reactions {\n      content\n      count\n      reacted\n    }\n    upvoteCount\n    downvoteCount\n    voteType\n    reportedCount\n    reportStatus\n    type\n    metadata\n    latestRevisionId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostCreate($input: PostCreateInput!) {\n  postCreatePrivileged(input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostUpdate($id: String!, $input: PostUpdateInput!) {\n  postUpdate(id: $id, input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostDelete($id: String!) {\n  postDelete(id: $id)\n}\n\nmutation PostVote($postId: String!, $type: PostVoteType!) {\n  postVote(postId: $postId, type: $type) {\n    success\n  }\n}\n\nmutation PostUnvote($postId: String!) {\n  postUnvote(postId: $postId) {\n    success\n  }\n}\n\nmutation PostReactionCreate($postId: String!, $content: String!) {\n  postReactionCreate(postId: $postId, content: $content) {\n    success\n  }\n}\n\nmutation PostReactionDelete($postId: String!, $content: String!) {\n  postReactionDelete(postId: $postId, content: $content) {\n    success\n  }\n}\n\nquery PostReactionProfiles($postId: String!, $content: String!, $pagination: PaginationInput!) {\n  postReactionProfiles(\n    postId: $postId\n    content: $content\n    pagination: $pagination\n  ) {\n    items {\n      username\n      displayName\n      profileId\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nmutation PostReportCreate($input: PostReportInput!) {\n  postReportCreate(input: $input) {\n    id\n  }\n}\n\nquery PostTopicById($id: String!) {\n  postTopicById(id: $id) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nquery PostTopics($ids: [String!]) {\n  postTopics(ids: $ids) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicCreate($input: PostTopicCreateInput!) {\n  postTopicCreate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicUpdate($input: PostTopicUpdateInput!) {\n  postTopicUpdate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicDelete($id: String!) {\n  postTopicDelete(id: $id) {\n    success\n  }\n}': typeof types.PostsDocument;
    'query SupportPost($identifier: String!) {\n  post(identifier: $identifier) {\n    identifier\n    slug\n    status\n    title\n    description\n    content\n    updatedAt\n    createdAt\n  }\n}\n\nquery SupportPosts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n    items {\n      identifier\n      slug\n      status\n      title\n      description\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery SupportPostTopic($slug: String!, $path: String, $pagination: PaginationInput!) {\n  postTopic(\n    slug: $slug\n    path: $path\n    type: "SupportArticle"\n    pagination: $pagination\n  ) {\n    topic {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    subTopics {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    pagedPosts {\n      items {\n        id\n        identifier\n        slug\n        status\n        title\n        description\n        content\n        metadata\n        updatedAt\n        createdAt\n      }\n      pagination {\n        itemIndex\n        itemIndexForPreviousPage\n        itemIndexForNextPage\n        itemsPerPage\n        itemsTotal\n        pagesTotal\n        page\n      }\n    }\n  }\n}\n\nmutation SupportTicketCreate($input: SupportTicketCreateInput!) {\n  supportTicketCreate(input: $input) {\n    id\n    type\n    status\n    userEmailAddress\n    title\n    description\n    comments {\n      content\n    }\n  }\n}\n\nmutation SupportTicketUpdateStatusPrivileged($id: String!, $status: SupportTicketStatus!) {\n  supportTicketUpdateStatusPrivileged(id: $id, status: $status) {\n    id\n    status\n  }\n}\n\nquery SupportTicketsPrivileged($pagination: PaginationInput!) {\n  supportTicketsPrivileged(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      assignedToProfileId\n      assignedToProfile {\n        username\n        displayName\n        images {\n          type\n          url\n          variant\n        }\n      }\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n      lastUserCommentedAt\n      answeredAt\n      answered\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nmutation SupportTicketAssign($ticketId: String!, $username: String) {\n  supportTicketAssign(ticketId: $ticketId, username: $username) {\n    id\n    assignedToProfileId\n    assignedToProfile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n    }\n  }\n}\n\nmutation SupportTicketCommentCreatePrivileged($input: SupportTicketCommentCreateInput!) {\n  supportTicketCommentCreatePrivileged(input: $input) {\n    id\n    content\n    contentType\n    source\n    visibility\n    createdAt\n  }\n}\n\nquery SupportAllSupportProfiles {\n  supportAllSupportProfiles {\n    username\n    displayName\n    images {\n      type\n      url\n      variant\n    }\n  }\n}\n\nquery SupportTicketAccountAndCommerceOrdersPriveleged($email: String!, $pagination: PaginationInput!) {\n  accountPrivileged(input: {emailAddress: $email}) {\n    defaultProfileId\n    defaultProfile {\n      id\n      images {\n        type\n        url\n        variant\n      }\n      displayName\n      givenName\n      familyName\n      preferredName\n      username\n      createdAt\n    }\n    emailAddress\n    status\n  }\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      id\n      fulfillmentStatus\n      emailAddress\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        originalSubtotal\n        subtotal\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        shippingRate {\n          amount\n          originalAmount\n        }\n        tax {\n          shipping\n          total\n        }\n      }\n      discounts {\n        code\n      }\n      source\n      status\n      metadata\n      createdAt\n      updatedAt\n      shippingInfo {\n        shippingAddress {\n          line1\n          line2\n          city\n          company\n          country\n          firstName\n          lastName\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n    }\n    pagination {\n      pagesTotal\n      page\n      itemsTotal\n      itemsPerPage\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemIndex\n    }\n  }\n}\n\nquery ProfileSupportTickets($openTicketsIndex: Int!, $closedTicketsIndex: Int!) {\n  openTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $openTicketsIndex, filters: [{column: "status", operator: Equal, value: "Open"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n  closedTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $closedTicketsIndex, filters: [{column: "status", operator: Equal, value: "Closed"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery ProfileSupportTicket($pagination: PaginationInput!) {\n  supportTickets(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}': typeof types.SupportPostDocument;
    'query WaitLists($pagination: PaginationInput!) {\n  waitLists(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      identifier\n      title\n      description\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListCreatePrivileged($data: WaitListCreationInput!) {\n  waitListCreatePrivileged(data: $data) {\n    id\n    identifier\n    title\n    description\n    updatedAt\n    createdAt\n  }\n}\n\nquery WaitListEntriesPrivileged($waitListIdentifier: String, $pagination: PaginationInput!) {\n  waitListEntriesPrivileged(\n    waitListIdentifier: $waitListIdentifier\n    pagination: $pagination\n  ) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      emailAddress\n      message\n      userAgent\n      countryCode\n      referredBy\n      contactedAt\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListEntryCreate($emailAddress: String!, $waitlistIdentifier: String! = "earlyAccess") {\n  waitListEntryCreate(\n    emailAddress: $emailAddress\n    waitListIdentifier: $waitlistIdentifier\n  ) {\n    id\n    emailAddress\n  }\n}': typeof types.WaitListsDocument;
};
const documents: Documents = {
    'mutation AccountAuthenticationRegistrationOrSignInCreate($input: AccountRegistrationOrSignInCreateInput!) {\n  accountAuthenticationRegistrationOrSignInCreate(input: $input) {\n    emailAddress\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery AccountAuthentication {\n  accountAuthentication {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountAuthenticationEmailVerification {\n  accountAuthenticationEmailVerification {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationSend {\n  accountAuthenticationEmailVerificationSend {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationVerify($input: AccountEmailVerificationVerifyInput!) {\n  accountAuthenticationEmailVerificationVerify(input: $input) {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationPasswordVerify($input: AccountPasswordVerifyInput!) {\n  accountAuthenticationPasswordVerify(input: $input) {\n    success\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountMaintenanceSessionCreate {\n  accountMaintenanceSessionCreate {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation AccountAuthenticationRegistrationComplete($input: AccountRegistrationCompleteInput!) {\n  accountAuthenticationRegistrationComplete(input: $input) {\n    success\n  }\n}\n\nmutation AccountAuthenticationSignInComplete {\n  accountAuthenticationSignInComplete {\n    success\n  }\n}\n\nmutation AccountPasswordUpdate($input: AccountPasswordUpdateInput!) {\n  accountPasswordUpdate(input: $input) {\n    success\n  }\n}\n\nmutation AccountSignOut {\n  accountSignOut {\n    success\n  }\n}\n\nquery Account {\n  account {\n    emailAddress\n    profile {\n      id\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountPrivileged($input: AccountInput!) {\n  accountPrivileged(input: $input) {\n    emailAddress\n    profiles {\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountsPrivileged($pagination: PaginationInput!) {\n  accountsPrivileged(pagination: $pagination) {\n    items {\n      emailAddress\n      profiles {\n        username\n        displayName\n        givenName\n        familyName\n        countryCode\n        images {\n          url\n          variant\n        }\n        updatedAt\n        createdAt\n      }\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nquery AccountProfileUsernameValidate($username: String!) {\n  accountProfileUsernameValidate(username: $username)\n}\n\nquery AccountEnrolledChallenges {\n  account {\n    enrolledChallenges\n  }\n}\n\nmutation AccountProfileUpdate($input: AccountProfileUpdateInput!) {\n  accountProfileUpdate(input: $input) {\n    username\n    displayName\n    givenName\n    familyName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountProfilePublic($username: String!) {\n  accountProfilePublic(username: $username) {\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    createdAt\n  }\n}\n\nquery AccountAccessRolesPrivileged {\n  accountAccessRolesPrivileged {\n    id\n    type\n    description\n  }\n}\n\nquery AccountAccessRoleAssignmentsPrivileged($statuses: [AccessRoleStatus!], $pagination: PaginationInput!) {\n  accountAccessRoleAssignmentsPrivileged(\n    statuses: $statuses\n    pagination: $pagination\n  ) {\n    items {\n      id\n      accessRole {\n        id\n        type\n        description\n      }\n      status\n      emailAddress\n      profile {\n        username\n        displayName\n        images {\n          url\n          variant\n        }\n        createdAt\n      }\n      expiresAt\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nmutation AccountAccessRoleAssignmentRevokePrivileged($input: AccessRoleAssignmentRevokeInput!) {\n  accountAccessRoleAssignmentRevokePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountAccessRoleAssignmentCreatePrivileged($input: AccessRoleAssignmentCreateInput!) {\n  accountAccessRoleAssignmentCreatePrivileged(input: $input) {\n    id\n    accessRole {\n      id\n      type\n      description\n    }\n    status\n    profile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n      createdAt\n    }\n    expiresAt\n    createdAt\n    updatedAt\n  }\n}\n\nmutation AccountDelete($reason: String) {\n  accountDelete(reason: $reason) {\n    success\n  }\n}\n\nmutation AccountDeletePrivileged($input: AccountDeleteInput!) {\n  accountDeletePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountProfileImageRemove {\n  accountProfileImageRemove {\n    id\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}':
        types.AccountAuthenticationRegistrationOrSignInCreateDocument,
    'mutation CommerceCheckoutSessionCreateDirect($input: CommerceCheckoutSessionCreateDirectInput!) {\n  commerceCheckoutSessionCreateDirect(input: $input) {\n    id\n    externalMetadata\n    createdAt\n  }\n}\n\nquery CommerceOrdersByCheckoutSession($checkoutSessionId: String!) {\n  commerceOrdersByCheckoutSession(checkoutSessionId: $checkoutSessionId) {\n    ... on CommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      createdAt\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrders($pagination: PaginationInput!) {\n  commerceOrders(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        amount\n        originalSubtotal\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery CommerceOrder($orderIdentifier: String!) {\n  commerceOrder(identifier: $orderIdentifier) {\n    ... on CommerceOrder {\n      identifier\n      status\n      statusRecords {\n        status\n        timestamp\n        description\n      }\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        indexId\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shipments {\n        id\n        orderIndexId\n        status\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        packageInfo {\n          items {\n            indexId\n            quantity\n          }\n        }\n        shippedAt\n        deliveredAt\n        cancelledAt\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n      appliedDiscounts {\n        amount\n        code\n      }\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrdersPrivileged($pagination: PaginationInput!) {\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      createdAt\n      emailAddress\n      fulfillmentSource\n      fulfillmentStatus\n      id\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      metadata\n      payment {\n        amount\n        authorizedAt\n        cancelledAt\n        capturedAt\n        confirmedAt\n        createdAt\n        currencyCode\n        externalReferenceId\n        id\n        paymentMethod {\n          externalResourceId\n          paymentProcessorType\n          type\n          ... on PaymentMethodCreditCard {\n            externalResourceId\n            billingAddress {\n              city\n              company\n              country\n              firstName\n              lastName\n              line1\n              line2\n              postalCode\n              state\n              phoneNumber\n            }\n            cardType\n            expirationMonth\n            expirationYear\n            last4\n            paymentProcessorType\n            type\n          }\n          ... on PaymentMethodAppleInAppPurchase {\n            externalResourceId\n            paymentProcessorType\n            type\n          }\n        }\n        paymentProcessorType\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        originalSubtotal\n        shippingRate {\n          amount\n          originalAmount\n        }\n        subtotal\n        tax {\n          shipping\n          total\n        }\n      }\n      shipments {\n        cancelledAt\n        createdAt\n        createdByAccountId\n        createdByProfileId\n        deliveredAt\n        deliveryStatus\n        id\n        orderIndexId\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        shippedAt\n        source\n        status\n        toAddress {\n          city\n          company\n          country\n          firstName\n          lastName\n          line1\n          line2\n          phoneNumber\n          state\n          postalCode\n        }\n        updatedAt\n        updatedByAccountId\n        updatedByProfileId\n      }\n      shippingInfo {\n        shippingAddress {\n          city\n          country\n          company\n          lastName\n          firstName\n          line1\n          line2\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n      source\n      status\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}':
        types.CommerceCheckoutSessionCreateDirectDocument,
    'query DataInteractionDatabases($pagination: PaginationInput!) {\n  dataInteractionDatabases(pagination: $pagination) {\n    items {\n      databaseName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTable($databaseName: String!, $tableName: String!) {\n  dataInteractionDatabaseTable(databaseName: $databaseName, tableName: $tableName) {\n    databaseName\n    tableName\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      type\n      tableName\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableMetrics($input: DataInteractionDatabaseTableMetricsQueryInput!) {\n  dataInteractionDatabaseTableMetrics(input: $input) {\n    timeInterval\n    data\n  }\n}\n\nquery DataInteractionDatabaseTables($databaseName: String, $pagination: PaginationInput!) {\n  dataInteractionDatabaseTables(\n    databaseName: $databaseName\n    pagination: $pagination\n  ) {\n    items {\n      databaseName\n      tableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableRows($databaseName: String!, $tableName: String!, $pagination: PaginationInput!, $filters: ColumnFilterGroupInput) {\n  dataInteractionDatabaseTableRows(\n    databaseName: $databaseName\n    tableName: $tableName\n    pagination: $pagination\n    filters: $filters\n  ) {\n    items\n    databaseName\n    tableName\n    rowCount\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      tableName\n      type\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}':
        types.DataInteractionDatabasesDocument,
    'mutation EngagementEventCreate($input: CreateEngagementEventInput!) {\n  engagementEventCreate(input: $input) {\n    success\n  }\n}\n\nmutation EngagementEventsCreate($input: [CreateEngagementEventInput!]!) {\n  engagementEventsCreate(inputs: $input) {\n    success\n  }\n}\n\nquery EngagementOverview {\n  engagementOverview {\n    uniqueDeviceIds\n    views {\n      uniqueDeviceCount\n      viewIdentifier\n    }\n    locations {\n      uniqueDeviceCount\n      countryCode\n      latitude\n      longitude\n    }\n    deviceCategoryPercentages\n  }\n}':
        types.EngagementEventCreateDocument,
    'query Form($identifier: String!) {\n  form(identifier: $identifier) {\n    identifier\n    title\n    description\n    status\n    metadata {\n      theme {\n        backgroundColor\n        primaryColor\n        header {\n          fontFamily\n          fontSize\n        }\n        question {\n          fontFamily\n          fontSize\n        }\n        text {\n          fontFamily\n          fontSize\n        }\n      }\n    }\n    components {\n      ... on FormComponentDataCheckbox {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        maxSelections\n      }\n      ... on FormComponentDataCheckboxGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n        maxSelectionsPerRow\n        allowEmpty\n      }\n      ... on FormComponentDataDate {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialDate\n        minDate\n        maxDate\n      }\n      ... on FormComponentDataDropdown {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        placeholder\n        defaultOption\n      }\n      ... on FormComponentDataLinearScale {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        min\n        max\n        step\n        leftLabel\n        rightLabel\n      }\n      ... on FormComponentDataMultipleChoice {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        defaultOption\n      }\n      ... on FormComponentDataMultipleChoiceGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n      }\n      ... on FormComponentDataParagraph {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataRating {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        icon\n        max\n        allowHalf\n        allowZero\n      }\n      ... on FormComponentDataSectionHeader {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n      ... on FormComponentDataShortAnswer {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataTime {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialTime\n        minTime\n        maxTime\n        allowSeconds\n        ampm\n      }\n      ... on FormComponentDataTitleAndDescription {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation SubmitForm($identifier: String!, $emailAddress: String, $data: JSON!) {\n  submitForm(identifier: $identifier, emailAddress: $emailAddress, data: $data) {\n    id\n    formId\n  }\n}':
        types.FormDocument,
    'query Posts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery PostsMine($pagination: PaginationInput!) {\n  postsMine(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery Post($identifier: String!) {\n  post(identifier: $identifier) {\n    id\n    identifier\n    slug\n    status\n    title\n    createdByProfileId\n    createdByProfile {\n      displayName\n      username\n      images {\n        url\n        type\n        variant\n      }\n    }\n    content\n    topics {\n      id\n      title\n    }\n    reactions {\n      content\n      count\n      reacted\n    }\n    upvoteCount\n    downvoteCount\n    voteType\n    reportedCount\n    reportStatus\n    type\n    metadata\n    latestRevisionId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostCreate($input: PostCreateInput!) {\n  postCreatePrivileged(input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostUpdate($id: String!, $input: PostUpdateInput!) {\n  postUpdate(id: $id, input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostDelete($id: String!) {\n  postDelete(id: $id)\n}\n\nmutation PostVote($postId: String!, $type: PostVoteType!) {\n  postVote(postId: $postId, type: $type) {\n    success\n  }\n}\n\nmutation PostUnvote($postId: String!) {\n  postUnvote(postId: $postId) {\n    success\n  }\n}\n\nmutation PostReactionCreate($postId: String!, $content: String!) {\n  postReactionCreate(postId: $postId, content: $content) {\n    success\n  }\n}\n\nmutation PostReactionDelete($postId: String!, $content: String!) {\n  postReactionDelete(postId: $postId, content: $content) {\n    success\n  }\n}\n\nquery PostReactionProfiles($postId: String!, $content: String!, $pagination: PaginationInput!) {\n  postReactionProfiles(\n    postId: $postId\n    content: $content\n    pagination: $pagination\n  ) {\n    items {\n      username\n      displayName\n      profileId\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nmutation PostReportCreate($input: PostReportInput!) {\n  postReportCreate(input: $input) {\n    id\n  }\n}\n\nquery PostTopicById($id: String!) {\n  postTopicById(id: $id) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nquery PostTopics($ids: [String!]) {\n  postTopics(ids: $ids) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicCreate($input: PostTopicCreateInput!) {\n  postTopicCreate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicUpdate($input: PostTopicUpdateInput!) {\n  postTopicUpdate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicDelete($id: String!) {\n  postTopicDelete(id: $id) {\n    success\n  }\n}':
        types.PostsDocument,
    'query SupportPost($identifier: String!) {\n  post(identifier: $identifier) {\n    identifier\n    slug\n    status\n    title\n    description\n    content\n    updatedAt\n    createdAt\n  }\n}\n\nquery SupportPosts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n    items {\n      identifier\n      slug\n      status\n      title\n      description\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery SupportPostTopic($slug: String!, $path: String, $pagination: PaginationInput!) {\n  postTopic(\n    slug: $slug\n    path: $path\n    type: "SupportArticle"\n    pagination: $pagination\n  ) {\n    topic {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    subTopics {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    pagedPosts {\n      items {\n        id\n        identifier\n        slug\n        status\n        title\n        description\n        content\n        metadata\n        updatedAt\n        createdAt\n      }\n      pagination {\n        itemIndex\n        itemIndexForPreviousPage\n        itemIndexForNextPage\n        itemsPerPage\n        itemsTotal\n        pagesTotal\n        page\n      }\n    }\n  }\n}\n\nmutation SupportTicketCreate($input: SupportTicketCreateInput!) {\n  supportTicketCreate(input: $input) {\n    id\n    type\n    status\n    userEmailAddress\n    title\n    description\n    comments {\n      content\n    }\n  }\n}\n\nmutation SupportTicketUpdateStatusPrivileged($id: String!, $status: SupportTicketStatus!) {\n  supportTicketUpdateStatusPrivileged(id: $id, status: $status) {\n    id\n    status\n  }\n}\n\nquery SupportTicketsPrivileged($pagination: PaginationInput!) {\n  supportTicketsPrivileged(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      assignedToProfileId\n      assignedToProfile {\n        username\n        displayName\n        images {\n          type\n          url\n          variant\n        }\n      }\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n      lastUserCommentedAt\n      answeredAt\n      answered\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nmutation SupportTicketAssign($ticketId: String!, $username: String) {\n  supportTicketAssign(ticketId: $ticketId, username: $username) {\n    id\n    assignedToProfileId\n    assignedToProfile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n    }\n  }\n}\n\nmutation SupportTicketCommentCreatePrivileged($input: SupportTicketCommentCreateInput!) {\n  supportTicketCommentCreatePrivileged(input: $input) {\n    id\n    content\n    contentType\n    source\n    visibility\n    createdAt\n  }\n}\n\nquery SupportAllSupportProfiles {\n  supportAllSupportProfiles {\n    username\n    displayName\n    images {\n      type\n      url\n      variant\n    }\n  }\n}\n\nquery SupportTicketAccountAndCommerceOrdersPriveleged($email: String!, $pagination: PaginationInput!) {\n  accountPrivileged(input: {emailAddress: $email}) {\n    defaultProfileId\n    defaultProfile {\n      id\n      images {\n        type\n        url\n        variant\n      }\n      displayName\n      givenName\n      familyName\n      preferredName\n      username\n      createdAt\n    }\n    emailAddress\n    status\n  }\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      id\n      fulfillmentStatus\n      emailAddress\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        originalSubtotal\n        subtotal\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        shippingRate {\n          amount\n          originalAmount\n        }\n        tax {\n          shipping\n          total\n        }\n      }\n      discounts {\n        code\n      }\n      source\n      status\n      metadata\n      createdAt\n      updatedAt\n      shippingInfo {\n        shippingAddress {\n          line1\n          line2\n          city\n          company\n          country\n          firstName\n          lastName\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n    }\n    pagination {\n      pagesTotal\n      page\n      itemsTotal\n      itemsPerPage\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemIndex\n    }\n  }\n}\n\nquery ProfileSupportTickets($openTicketsIndex: Int!, $closedTicketsIndex: Int!) {\n  openTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $openTicketsIndex, filters: [{column: "status", operator: Equal, value: "Open"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n  closedTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $closedTicketsIndex, filters: [{column: "status", operator: Equal, value: "Closed"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery ProfileSupportTicket($pagination: PaginationInput!) {\n  supportTickets(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}':
        types.SupportPostDocument,
    'query WaitLists($pagination: PaginationInput!) {\n  waitLists(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      identifier\n      title\n      description\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListCreatePrivileged($data: WaitListCreationInput!) {\n  waitListCreatePrivileged(data: $data) {\n    id\n    identifier\n    title\n    description\n    updatedAt\n    createdAt\n  }\n}\n\nquery WaitListEntriesPrivileged($waitListIdentifier: String, $pagination: PaginationInput!) {\n  waitListEntriesPrivileged(\n    waitListIdentifier: $waitListIdentifier\n    pagination: $pagination\n  ) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      emailAddress\n      message\n      userAgent\n      countryCode\n      referredBy\n      contactedAt\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListEntryCreate($emailAddress: String!, $waitlistIdentifier: String! = "earlyAccess") {\n  waitListEntryCreate(\n    emailAddress: $emailAddress\n    waitListIdentifier: $waitlistIdentifier\n  ) {\n    id\n    emailAddress\n  }\n}':
        types.WaitListsDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'mutation AccountAuthenticationRegistrationOrSignInCreate($input: AccountRegistrationOrSignInCreateInput!) {\n  accountAuthenticationRegistrationOrSignInCreate(input: $input) {\n    emailAddress\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery AccountAuthentication {\n  accountAuthentication {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountAuthenticationEmailVerification {\n  accountAuthenticationEmailVerification {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationSend {\n  accountAuthenticationEmailVerificationSend {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationVerify($input: AccountEmailVerificationVerifyInput!) {\n  accountAuthenticationEmailVerificationVerify(input: $input) {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationPasswordVerify($input: AccountPasswordVerifyInput!) {\n  accountAuthenticationPasswordVerify(input: $input) {\n    success\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountMaintenanceSessionCreate {\n  accountMaintenanceSessionCreate {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation AccountAuthenticationRegistrationComplete($input: AccountRegistrationCompleteInput!) {\n  accountAuthenticationRegistrationComplete(input: $input) {\n    success\n  }\n}\n\nmutation AccountAuthenticationSignInComplete {\n  accountAuthenticationSignInComplete {\n    success\n  }\n}\n\nmutation AccountPasswordUpdate($input: AccountPasswordUpdateInput!) {\n  accountPasswordUpdate(input: $input) {\n    success\n  }\n}\n\nmutation AccountSignOut {\n  accountSignOut {\n    success\n  }\n}\n\nquery Account {\n  account {\n    emailAddress\n    profile {\n      id\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountPrivileged($input: AccountInput!) {\n  accountPrivileged(input: $input) {\n    emailAddress\n    profiles {\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountsPrivileged($pagination: PaginationInput!) {\n  accountsPrivileged(pagination: $pagination) {\n    items {\n      emailAddress\n      profiles {\n        username\n        displayName\n        givenName\n        familyName\n        countryCode\n        images {\n          url\n          variant\n        }\n        updatedAt\n        createdAt\n      }\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nquery AccountProfileUsernameValidate($username: String!) {\n  accountProfileUsernameValidate(username: $username)\n}\n\nquery AccountEnrolledChallenges {\n  account {\n    enrolledChallenges\n  }\n}\n\nmutation AccountProfileUpdate($input: AccountProfileUpdateInput!) {\n  accountProfileUpdate(input: $input) {\n    username\n    displayName\n    givenName\n    familyName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountProfilePublic($username: String!) {\n  accountProfilePublic(username: $username) {\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    createdAt\n  }\n}\n\nquery AccountAccessRolesPrivileged {\n  accountAccessRolesPrivileged {\n    id\n    type\n    description\n  }\n}\n\nquery AccountAccessRoleAssignmentsPrivileged($statuses: [AccessRoleStatus!], $pagination: PaginationInput!) {\n  accountAccessRoleAssignmentsPrivileged(\n    statuses: $statuses\n    pagination: $pagination\n  ) {\n    items {\n      id\n      accessRole {\n        id\n        type\n        description\n      }\n      status\n      emailAddress\n      profile {\n        username\n        displayName\n        images {\n          url\n          variant\n        }\n        createdAt\n      }\n      expiresAt\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nmutation AccountAccessRoleAssignmentRevokePrivileged($input: AccessRoleAssignmentRevokeInput!) {\n  accountAccessRoleAssignmentRevokePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountAccessRoleAssignmentCreatePrivileged($input: AccessRoleAssignmentCreateInput!) {\n  accountAccessRoleAssignmentCreatePrivileged(input: $input) {\n    id\n    accessRole {\n      id\n      type\n      description\n    }\n    status\n    profile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n      createdAt\n    }\n    expiresAt\n    createdAt\n    updatedAt\n  }\n}\n\nmutation AccountDelete($reason: String) {\n  accountDelete(reason: $reason) {\n    success\n  }\n}\n\nmutation AccountDeletePrivileged($input: AccountDeleteInput!) {\n  accountDeletePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountProfileImageRemove {\n  accountProfileImageRemove {\n    id\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}',
): (typeof documents)['mutation AccountAuthenticationRegistrationOrSignInCreate($input: AccountRegistrationOrSignInCreateInput!) {\n  accountAuthenticationRegistrationOrSignInCreate(input: $input) {\n    emailAddress\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery AccountAuthentication {\n  accountAuthentication {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountAuthenticationEmailVerification {\n  accountAuthenticationEmailVerification {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationSend {\n  accountAuthenticationEmailVerificationSend {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationEmailVerificationVerify($input: AccountEmailVerificationVerifyInput!) {\n  accountAuthenticationEmailVerificationVerify(input: $input) {\n    verification {\n      status\n      emailAddress\n      lastEmailSentAt\n    }\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountAuthenticationPasswordVerify($input: AccountPasswordVerifyInput!) {\n  accountAuthenticationPasswordVerify(input: $input) {\n    success\n    authentication {\n      status\n      scopeType\n      currentChallenge {\n        challengeType\n        status\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation AccountMaintenanceSessionCreate {\n  accountMaintenanceSessionCreate {\n    status\n    scopeType\n    currentChallenge {\n      challengeType\n      status\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation AccountAuthenticationRegistrationComplete($input: AccountRegistrationCompleteInput!) {\n  accountAuthenticationRegistrationComplete(input: $input) {\n    success\n  }\n}\n\nmutation AccountAuthenticationSignInComplete {\n  accountAuthenticationSignInComplete {\n    success\n  }\n}\n\nmutation AccountPasswordUpdate($input: AccountPasswordUpdateInput!) {\n  accountPasswordUpdate(input: $input) {\n    success\n  }\n}\n\nmutation AccountSignOut {\n  accountSignOut {\n    success\n  }\n}\n\nquery Account {\n  account {\n    emailAddress\n    profile {\n      id\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountPrivileged($input: AccountInput!) {\n  accountPrivileged(input: $input) {\n    emailAddress\n    profiles {\n      username\n      displayName\n      givenName\n      familyName\n      images {\n        url\n        variant\n      }\n      updatedAt\n      createdAt\n    }\n    accessRoles\n    createdAt\n  }\n}\n\nquery AccountsPrivileged($pagination: PaginationInput!) {\n  accountsPrivileged(pagination: $pagination) {\n    items {\n      emailAddress\n      profiles {\n        username\n        displayName\n        givenName\n        familyName\n        countryCode\n        images {\n          url\n          variant\n        }\n        updatedAt\n        createdAt\n      }\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nquery AccountProfileUsernameValidate($username: String!) {\n  accountProfileUsernameValidate(username: $username)\n}\n\nquery AccountEnrolledChallenges {\n  account {\n    enrolledChallenges\n  }\n}\n\nmutation AccountProfileUpdate($input: AccountProfileUpdateInput!) {\n  accountProfileUpdate(input: $input) {\n    username\n    displayName\n    givenName\n    familyName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nquery AccountProfilePublic($username: String!) {\n  accountProfilePublic(username: $username) {\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    createdAt\n  }\n}\n\nquery AccountAccessRolesPrivileged {\n  accountAccessRolesPrivileged {\n    id\n    type\n    description\n  }\n}\n\nquery AccountAccessRoleAssignmentsPrivileged($statuses: [AccessRoleStatus!], $pagination: PaginationInput!) {\n  accountAccessRoleAssignmentsPrivileged(\n    statuses: $statuses\n    pagination: $pagination\n  ) {\n    items {\n      id\n      accessRole {\n        id\n        type\n        description\n      }\n      status\n      emailAddress\n      profile {\n        username\n        displayName\n        images {\n          url\n          variant\n        }\n        createdAt\n      }\n      expiresAt\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}\n\nmutation AccountAccessRoleAssignmentRevokePrivileged($input: AccessRoleAssignmentRevokeInput!) {\n  accountAccessRoleAssignmentRevokePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountAccessRoleAssignmentCreatePrivileged($input: AccessRoleAssignmentCreateInput!) {\n  accountAccessRoleAssignmentCreatePrivileged(input: $input) {\n    id\n    accessRole {\n      id\n      type\n      description\n    }\n    status\n    profile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n      createdAt\n    }\n    expiresAt\n    createdAt\n    updatedAt\n  }\n}\n\nmutation AccountDelete($reason: String) {\n  accountDelete(reason: $reason) {\n    success\n  }\n}\n\nmutation AccountDeletePrivileged($input: AccountDeleteInput!) {\n  accountDeletePrivileged(input: $input) {\n    success\n  }\n}\n\nmutation AccountProfileImageRemove {\n  accountProfileImageRemove {\n    id\n    username\n    displayName\n    images {\n      url\n      variant\n    }\n    updatedAt\n    createdAt\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'mutation CommerceCheckoutSessionCreateDirect($input: CommerceCheckoutSessionCreateDirectInput!) {\n  commerceCheckoutSessionCreateDirect(input: $input) {\n    id\n    externalMetadata\n    createdAt\n  }\n}\n\nquery CommerceOrdersByCheckoutSession($checkoutSessionId: String!) {\n  commerceOrdersByCheckoutSession(checkoutSessionId: $checkoutSessionId) {\n    ... on CommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      createdAt\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrders($pagination: PaginationInput!) {\n  commerceOrders(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        amount\n        originalSubtotal\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery CommerceOrder($orderIdentifier: String!) {\n  commerceOrder(identifier: $orderIdentifier) {\n    ... on CommerceOrder {\n      identifier\n      status\n      statusRecords {\n        status\n        timestamp\n        description\n      }\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        indexId\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shipments {\n        id\n        orderIndexId\n        status\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        packageInfo {\n          items {\n            indexId\n            quantity\n          }\n        }\n        shippedAt\n        deliveredAt\n        cancelledAt\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n      appliedDiscounts {\n        amount\n        code\n      }\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrdersPrivileged($pagination: PaginationInput!) {\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      createdAt\n      emailAddress\n      fulfillmentSource\n      fulfillmentStatus\n      id\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      metadata\n      payment {\n        amount\n        authorizedAt\n        cancelledAt\n        capturedAt\n        confirmedAt\n        createdAt\n        currencyCode\n        externalReferenceId\n        id\n        paymentMethod {\n          externalResourceId\n          paymentProcessorType\n          type\n          ... on PaymentMethodCreditCard {\n            externalResourceId\n            billingAddress {\n              city\n              company\n              country\n              firstName\n              lastName\n              line1\n              line2\n              postalCode\n              state\n              phoneNumber\n            }\n            cardType\n            expirationMonth\n            expirationYear\n            last4\n            paymentProcessorType\n            type\n          }\n          ... on PaymentMethodAppleInAppPurchase {\n            externalResourceId\n            paymentProcessorType\n            type\n          }\n        }\n        paymentProcessorType\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        originalSubtotal\n        shippingRate {\n          amount\n          originalAmount\n        }\n        subtotal\n        tax {\n          shipping\n          total\n        }\n      }\n      shipments {\n        cancelledAt\n        createdAt\n        createdByAccountId\n        createdByProfileId\n        deliveredAt\n        deliveryStatus\n        id\n        orderIndexId\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        shippedAt\n        source\n        status\n        toAddress {\n          city\n          company\n          country\n          firstName\n          lastName\n          line1\n          line2\n          phoneNumber\n          state\n          postalCode\n        }\n        updatedAt\n        updatedByAccountId\n        updatedByProfileId\n      }\n      shippingInfo {\n        shippingAddress {\n          city\n          country\n          company\n          lastName\n          firstName\n          line1\n          line2\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n      source\n      status\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}',
): (typeof documents)['mutation CommerceCheckoutSessionCreateDirect($input: CommerceCheckoutSessionCreateDirectInput!) {\n  commerceCheckoutSessionCreateDirect(input: $input) {\n    id\n    externalMetadata\n    createdAt\n  }\n}\n\nquery CommerceOrdersByCheckoutSession($checkoutSessionId: String!) {\n  commerceOrdersByCheckoutSession(checkoutSessionId: $checkoutSessionId) {\n    ... on CommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      createdAt\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrders($pagination: PaginationInput!) {\n  commerceOrders(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        amount\n        originalSubtotal\n      }\n      appliedDiscounts {\n        amount\n        code\n      }\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery CommerceOrder($orderIdentifier: String!) {\n  commerceOrder(identifier: $orderIdentifier) {\n    ... on CommerceOrder {\n      identifier\n      status\n      statusRecords {\n        status\n        timestamp\n        description\n      }\n      paymentStatus\n      fulfillmentStatus\n      emailAddress\n      lineItems {\n        id\n        indexId\n        status\n        productVariantId\n        quantity\n        updatedAt\n        createdAt\n      }\n      shipments {\n        id\n        orderIndexId\n        status\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        packageInfo {\n          items {\n            indexId\n            quantity\n          }\n        }\n        shippedAt\n        deliveredAt\n        cancelledAt\n        updatedAt\n        createdAt\n      }\n      shippingInfo {\n        shippingAddress {\n          firstName\n          lastName\n          company\n          phoneNumber\n          line1\n          line2\n          city\n          state\n          postalCode\n          country\n        }\n      }\n      payment {\n        paymentMethod {\n          ... on PaymentMethodCreditCard {\n            billingAddress {\n              firstName\n              lastName\n              company\n              phoneNumber\n              line1\n              line2\n              city\n              state\n              postalCode\n              country\n            }\n            type\n            last4\n            cardType\n          }\n        }\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n      appliedDiscounts {\n        amount\n        code\n      }\n    }\n    ... on PublicCommerceOrder {\n      identifier\n      status\n      paymentStatus\n      fulfillmentStatus\n      lineItems {\n        id\n        status\n        productVariantId\n        quantity\n      }\n      priceInfo {\n        currencyCode\n        originalSubtotal\n        shippingRate {\n          originalAmount\n          amount\n        }\n        tax {\n          shipping\n          total\n        }\n        subtotal\n        amount\n      }\n      createdAt\n    }\n  }\n}\n\nquery CommerceOrdersPrivileged($pagination: PaginationInput!) {\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      createdAt\n      emailAddress\n      fulfillmentSource\n      fulfillmentStatus\n      id\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      metadata\n      payment {\n        amount\n        authorizedAt\n        cancelledAt\n        capturedAt\n        confirmedAt\n        createdAt\n        currencyCode\n        externalReferenceId\n        id\n        paymentMethod {\n          externalResourceId\n          paymentProcessorType\n          type\n          ... on PaymentMethodCreditCard {\n            externalResourceId\n            billingAddress {\n              city\n              company\n              country\n              firstName\n              lastName\n              line1\n              line2\n              postalCode\n              state\n              phoneNumber\n            }\n            cardType\n            expirationMonth\n            expirationYear\n            last4\n            paymentProcessorType\n            type\n          }\n          ... on PaymentMethodAppleInAppPurchase {\n            externalResourceId\n            paymentProcessorType\n            type\n          }\n        }\n        paymentProcessorType\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        originalSubtotal\n        shippingRate {\n          amount\n          originalAmount\n        }\n        subtotal\n        tax {\n          shipping\n          total\n        }\n      }\n      shipments {\n        cancelledAt\n        createdAt\n        createdByAccountId\n        createdByProfileId\n        deliveredAt\n        deliveryStatus\n        id\n        orderIndexId\n        label {\n          carrier\n          serviceType\n          trackingNumber\n          trackingUrl\n        }\n        shippedAt\n        source\n        status\n        toAddress {\n          city\n          company\n          country\n          firstName\n          lastName\n          line1\n          line2\n          phoneNumber\n          state\n          postalCode\n        }\n        updatedAt\n        updatedByAccountId\n        updatedByProfileId\n      }\n      shippingInfo {\n        shippingAddress {\n          city\n          country\n          company\n          lastName\n          firstName\n          line1\n          line2\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n      source\n      status\n      updatedAt\n    }\n    pagination {\n      itemsTotal\n      itemsPerPage\n      page\n      pagesTotal\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n    }\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'query DataInteractionDatabases($pagination: PaginationInput!) {\n  dataInteractionDatabases(pagination: $pagination) {\n    items {\n      databaseName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTable($databaseName: String!, $tableName: String!) {\n  dataInteractionDatabaseTable(databaseName: $databaseName, tableName: $tableName) {\n    databaseName\n    tableName\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      type\n      tableName\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableMetrics($input: DataInteractionDatabaseTableMetricsQueryInput!) {\n  dataInteractionDatabaseTableMetrics(input: $input) {\n    timeInterval\n    data\n  }\n}\n\nquery DataInteractionDatabaseTables($databaseName: String, $pagination: PaginationInput!) {\n  dataInteractionDatabaseTables(\n    databaseName: $databaseName\n    pagination: $pagination\n  ) {\n    items {\n      databaseName\n      tableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableRows($databaseName: String!, $tableName: String!, $pagination: PaginationInput!, $filters: ColumnFilterGroupInput) {\n  dataInteractionDatabaseTableRows(\n    databaseName: $databaseName\n    tableName: $tableName\n    pagination: $pagination\n    filters: $filters\n  ) {\n    items\n    databaseName\n    tableName\n    rowCount\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      tableName\n      type\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}',
): (typeof documents)['query DataInteractionDatabases($pagination: PaginationInput!) {\n  dataInteractionDatabases(pagination: $pagination) {\n    items {\n      databaseName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTable($databaseName: String!, $tableName: String!) {\n  dataInteractionDatabaseTable(databaseName: $databaseName, tableName: $tableName) {\n    databaseName\n    tableName\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      type\n      tableName\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableMetrics($input: DataInteractionDatabaseTableMetricsQueryInput!) {\n  dataInteractionDatabaseTableMetrics(input: $input) {\n    timeInterval\n    data\n  }\n}\n\nquery DataInteractionDatabaseTables($databaseName: String, $pagination: PaginationInput!) {\n  dataInteractionDatabaseTables(\n    databaseName: $databaseName\n    pagination: $pagination\n  ) {\n    items {\n      databaseName\n      tableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery DataInteractionDatabaseTableRows($databaseName: String!, $tableName: String!, $pagination: PaginationInput!, $filters: ColumnFilterGroupInput) {\n  dataInteractionDatabaseTableRows(\n    databaseName: $databaseName\n    tableName: $tableName\n    pagination: $pagination\n    filters: $filters\n  ) {\n    items\n    databaseName\n    tableName\n    rowCount\n    columns {\n      name\n      type\n      isKey\n      isPrimaryKey\n      keyTableName\n      possibleValues\n      isNullable\n      isGenerated\n      length\n    }\n    relations {\n      fieldName\n      tableName\n      type\n      inverseFieldName\n      inverseType\n      inverseTableName\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'mutation EngagementEventCreate($input: CreateEngagementEventInput!) {\n  engagementEventCreate(input: $input) {\n    success\n  }\n}\n\nmutation EngagementEventsCreate($input: [CreateEngagementEventInput!]!) {\n  engagementEventsCreate(inputs: $input) {\n    success\n  }\n}\n\nquery EngagementOverview {\n  engagementOverview {\n    uniqueDeviceIds\n    views {\n      uniqueDeviceCount\n      viewIdentifier\n    }\n    locations {\n      uniqueDeviceCount\n      countryCode\n      latitude\n      longitude\n    }\n    deviceCategoryPercentages\n  }\n}',
): (typeof documents)['mutation EngagementEventCreate($input: CreateEngagementEventInput!) {\n  engagementEventCreate(input: $input) {\n    success\n  }\n}\n\nmutation EngagementEventsCreate($input: [CreateEngagementEventInput!]!) {\n  engagementEventsCreate(inputs: $input) {\n    success\n  }\n}\n\nquery EngagementOverview {\n  engagementOverview {\n    uniqueDeviceIds\n    views {\n      uniqueDeviceCount\n      viewIdentifier\n    }\n    locations {\n      uniqueDeviceCount\n      countryCode\n      latitude\n      longitude\n    }\n    deviceCategoryPercentages\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'query Form($identifier: String!) {\n  form(identifier: $identifier) {\n    identifier\n    title\n    description\n    status\n    metadata {\n      theme {\n        backgroundColor\n        primaryColor\n        header {\n          fontFamily\n          fontSize\n        }\n        question {\n          fontFamily\n          fontSize\n        }\n        text {\n          fontFamily\n          fontSize\n        }\n      }\n    }\n    components {\n      ... on FormComponentDataCheckbox {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        maxSelections\n      }\n      ... on FormComponentDataCheckboxGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n        maxSelectionsPerRow\n        allowEmpty\n      }\n      ... on FormComponentDataDate {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialDate\n        minDate\n        maxDate\n      }\n      ... on FormComponentDataDropdown {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        placeholder\n        defaultOption\n      }\n      ... on FormComponentDataLinearScale {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        min\n        max\n        step\n        leftLabel\n        rightLabel\n      }\n      ... on FormComponentDataMultipleChoice {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        defaultOption\n      }\n      ... on FormComponentDataMultipleChoiceGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n      }\n      ... on FormComponentDataParagraph {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataRating {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        icon\n        max\n        allowHalf\n        allowZero\n      }\n      ... on FormComponentDataSectionHeader {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n      ... on FormComponentDataShortAnswer {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataTime {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialTime\n        minTime\n        maxTime\n        allowSeconds\n        ampm\n      }\n      ... on FormComponentDataTitleAndDescription {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation SubmitForm($identifier: String!, $emailAddress: String, $data: JSON!) {\n  submitForm(identifier: $identifier, emailAddress: $emailAddress, data: $data) {\n    id\n    formId\n  }\n}',
): (typeof documents)['query Form($identifier: String!) {\n  form(identifier: $identifier) {\n    identifier\n    title\n    description\n    status\n    metadata {\n      theme {\n        backgroundColor\n        primaryColor\n        header {\n          fontFamily\n          fontSize\n        }\n        question {\n          fontFamily\n          fontSize\n        }\n        text {\n          fontFamily\n          fontSize\n        }\n      }\n    }\n    components {\n      ... on FormComponentDataCheckbox {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        maxSelections\n      }\n      ... on FormComponentDataCheckboxGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n        maxSelectionsPerRow\n        allowEmpty\n      }\n      ... on FormComponentDataDate {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialDate\n        minDate\n        maxDate\n      }\n      ... on FormComponentDataDropdown {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        placeholder\n        defaultOption\n      }\n      ... on FormComponentDataLinearScale {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        min\n        max\n        step\n        leftLabel\n        rightLabel\n      }\n      ... on FormComponentDataMultipleChoice {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        options\n        defaultOption\n      }\n      ... on FormComponentDataMultipleChoiceGrid {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        columns\n        rows\n      }\n      ... on FormComponentDataParagraph {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataRating {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        icon\n        max\n        allowHalf\n        allowZero\n      }\n      ... on FormComponentDataSectionHeader {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n      ... on FormComponentDataShortAnswer {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        placeholder\n      }\n      ... on FormComponentDataTime {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n        initialTime\n        minTime\n        maxTime\n        allowSeconds\n        ampm\n      }\n      ... on FormComponentDataTitleAndDescription {\n        id\n        position\n        section\n        type\n        title\n        description\n        required\n      }\n    }\n    updatedAt\n    createdAt\n  }\n}\n\nmutation SubmitForm($identifier: String!, $emailAddress: String, $data: JSON!) {\n  submitForm(identifier: $identifier, emailAddress: $emailAddress, data: $data) {\n    id\n    formId\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'query Posts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery PostsMine($pagination: PaginationInput!) {\n  postsMine(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery Post($identifier: String!) {\n  post(identifier: $identifier) {\n    id\n    identifier\n    slug\n    status\n    title\n    createdByProfileId\n    createdByProfile {\n      displayName\n      username\n      images {\n        url\n        type\n        variant\n      }\n    }\n    content\n    topics {\n      id\n      title\n    }\n    reactions {\n      content\n      count\n      reacted\n    }\n    upvoteCount\n    downvoteCount\n    voteType\n    reportedCount\n    reportStatus\n    type\n    metadata\n    latestRevisionId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostCreate($input: PostCreateInput!) {\n  postCreatePrivileged(input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostUpdate($id: String!, $input: PostUpdateInput!) {\n  postUpdate(id: $id, input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostDelete($id: String!) {\n  postDelete(id: $id)\n}\n\nmutation PostVote($postId: String!, $type: PostVoteType!) {\n  postVote(postId: $postId, type: $type) {\n    success\n  }\n}\n\nmutation PostUnvote($postId: String!) {\n  postUnvote(postId: $postId) {\n    success\n  }\n}\n\nmutation PostReactionCreate($postId: String!, $content: String!) {\n  postReactionCreate(postId: $postId, content: $content) {\n    success\n  }\n}\n\nmutation PostReactionDelete($postId: String!, $content: String!) {\n  postReactionDelete(postId: $postId, content: $content) {\n    success\n  }\n}\n\nquery PostReactionProfiles($postId: String!, $content: String!, $pagination: PaginationInput!) {\n  postReactionProfiles(\n    postId: $postId\n    content: $content\n    pagination: $pagination\n  ) {\n    items {\n      username\n      displayName\n      profileId\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nmutation PostReportCreate($input: PostReportInput!) {\n  postReportCreate(input: $input) {\n    id\n  }\n}\n\nquery PostTopicById($id: String!) {\n  postTopicById(id: $id) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nquery PostTopics($ids: [String!]) {\n  postTopics(ids: $ids) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicCreate($input: PostTopicCreateInput!) {\n  postTopicCreate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicUpdate($input: PostTopicUpdateInput!) {\n  postTopicUpdate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicDelete($id: String!) {\n  postTopicDelete(id: $id) {\n    success\n  }\n}',
): (typeof documents)['query Posts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery PostsMine($pagination: PaginationInput!) {\n  postsMine(pagination: $pagination) {\n    items {\n      id\n      identifier\n      slug\n      status\n      title\n      createdByProfileId\n      createdByProfile {\n        displayName\n        username\n        images {\n          url\n          type\n          variant\n        }\n      }\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      reactions {\n        content\n        count\n        reacted\n      }\n      upvoteCount\n      downvoteCount\n      voteType\n      reportedCount\n      reportStatus\n      metadata\n      latestRevisionId\n      updatedAt\n      createdAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nquery Post($identifier: String!) {\n  post(identifier: $identifier) {\n    id\n    identifier\n    slug\n    status\n    title\n    createdByProfileId\n    createdByProfile {\n      displayName\n      username\n      images {\n        url\n        type\n        variant\n      }\n    }\n    content\n    topics {\n      id\n      title\n    }\n    reactions {\n      content\n      count\n      reacted\n    }\n    upvoteCount\n    downvoteCount\n    voteType\n    reportedCount\n    reportStatus\n    type\n    metadata\n    latestRevisionId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostCreate($input: PostCreateInput!) {\n  postCreatePrivileged(input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostUpdate($id: String!, $input: PostUpdateInput!) {\n  postUpdate(id: $id, input: $input) {\n    id\n    status\n    title\n    contentType\n    content\n    settings\n    upvoteCount\n    downvoteCount\n    metadata\n    updatedAt\n    createdAt\n  }\n}\n\nmutation PostDelete($id: String!) {\n  postDelete(id: $id)\n}\n\nmutation PostVote($postId: String!, $type: PostVoteType!) {\n  postVote(postId: $postId, type: $type) {\n    success\n  }\n}\n\nmutation PostUnvote($postId: String!) {\n  postUnvote(postId: $postId) {\n    success\n  }\n}\n\nmutation PostReactionCreate($postId: String!, $content: String!) {\n  postReactionCreate(postId: $postId, content: $content) {\n    success\n  }\n}\n\nmutation PostReactionDelete($postId: String!, $content: String!) {\n  postReactionDelete(postId: $postId, content: $content) {\n    success\n  }\n}\n\nquery PostReactionProfiles($postId: String!, $content: String!, $pagination: PaginationInput!) {\n  postReactionProfiles(\n    postId: $postId\n    content: $content\n    pagination: $pagination\n  ) {\n    items {\n      username\n      displayName\n      profileId\n    }\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n  }\n}\n\nmutation PostReportCreate($input: PostReportInput!) {\n  postReportCreate(input: $input) {\n    id\n  }\n}\n\nquery PostTopicById($id: String!) {\n  postTopicById(id: $id) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nquery PostTopics($ids: [String!]) {\n  postTopics(ids: $ids) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicCreate($input: PostTopicCreateInput!) {\n  postTopicCreate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicUpdate($input: PostTopicUpdateInput!) {\n  postTopicUpdate(input: $input) {\n    id\n    title\n    slug\n    description\n    postCount\n    createdAt\n  }\n}\n\nmutation PostTopicDelete($id: String!) {\n  postTopicDelete(id: $id) {\n    success\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'query SupportPost($identifier: String!) {\n  post(identifier: $identifier) {\n    identifier\n    slug\n    status\n    title\n    description\n    content\n    updatedAt\n    createdAt\n  }\n}\n\nquery SupportPosts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n    items {\n      identifier\n      slug\n      status\n      title\n      description\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery SupportPostTopic($slug: String!, $path: String, $pagination: PaginationInput!) {\n  postTopic(\n    slug: $slug\n    path: $path\n    type: "SupportArticle"\n    pagination: $pagination\n  ) {\n    topic {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    subTopics {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    pagedPosts {\n      items {\n        id\n        identifier\n        slug\n        status\n        title\n        description\n        content\n        metadata\n        updatedAt\n        createdAt\n      }\n      pagination {\n        itemIndex\n        itemIndexForPreviousPage\n        itemIndexForNextPage\n        itemsPerPage\n        itemsTotal\n        pagesTotal\n        page\n      }\n    }\n  }\n}\n\nmutation SupportTicketCreate($input: SupportTicketCreateInput!) {\n  supportTicketCreate(input: $input) {\n    id\n    type\n    status\n    userEmailAddress\n    title\n    description\n    comments {\n      content\n    }\n  }\n}\n\nmutation SupportTicketUpdateStatusPrivileged($id: String!, $status: SupportTicketStatus!) {\n  supportTicketUpdateStatusPrivileged(id: $id, status: $status) {\n    id\n    status\n  }\n}\n\nquery SupportTicketsPrivileged($pagination: PaginationInput!) {\n  supportTicketsPrivileged(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      assignedToProfileId\n      assignedToProfile {\n        username\n        displayName\n        images {\n          type\n          url\n          variant\n        }\n      }\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n      lastUserCommentedAt\n      answeredAt\n      answered\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nmutation SupportTicketAssign($ticketId: String!, $username: String) {\n  supportTicketAssign(ticketId: $ticketId, username: $username) {\n    id\n    assignedToProfileId\n    assignedToProfile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n    }\n  }\n}\n\nmutation SupportTicketCommentCreatePrivileged($input: SupportTicketCommentCreateInput!) {\n  supportTicketCommentCreatePrivileged(input: $input) {\n    id\n    content\n    contentType\n    source\n    visibility\n    createdAt\n  }\n}\n\nquery SupportAllSupportProfiles {\n  supportAllSupportProfiles {\n    username\n    displayName\n    images {\n      type\n      url\n      variant\n    }\n  }\n}\n\nquery SupportTicketAccountAndCommerceOrdersPriveleged($email: String!, $pagination: PaginationInput!) {\n  accountPrivileged(input: {emailAddress: $email}) {\n    defaultProfileId\n    defaultProfile {\n      id\n      images {\n        type\n        url\n        variant\n      }\n      displayName\n      givenName\n      familyName\n      preferredName\n      username\n      createdAt\n    }\n    emailAddress\n    status\n  }\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      id\n      fulfillmentStatus\n      emailAddress\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        originalSubtotal\n        subtotal\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        shippingRate {\n          amount\n          originalAmount\n        }\n        tax {\n          shipping\n          total\n        }\n      }\n      discounts {\n        code\n      }\n      source\n      status\n      metadata\n      createdAt\n      updatedAt\n      shippingInfo {\n        shippingAddress {\n          line1\n          line2\n          city\n          company\n          country\n          firstName\n          lastName\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n    }\n    pagination {\n      pagesTotal\n      page\n      itemsTotal\n      itemsPerPage\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemIndex\n    }\n  }\n}\n\nquery ProfileSupportTickets($openTicketsIndex: Int!, $closedTicketsIndex: Int!) {\n  openTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $openTicketsIndex, filters: [{column: "status", operator: Equal, value: "Open"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n  closedTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $closedTicketsIndex, filters: [{column: "status", operator: Equal, value: "Closed"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery ProfileSupportTicket($pagination: PaginationInput!) {\n  supportTickets(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}',
): (typeof documents)['query SupportPost($identifier: String!) {\n  post(identifier: $identifier) {\n    identifier\n    slug\n    status\n    title\n    description\n    content\n    updatedAt\n    createdAt\n  }\n}\n\nquery SupportPosts($pagination: PaginationInput!) {\n  posts(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemsPerPage\n      itemsTotal\n      pagesTotal\n      page\n    }\n    items {\n      identifier\n      slug\n      status\n      title\n      description\n      content\n      topics {\n        id\n        title\n        slug\n      }\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nquery SupportPostTopic($slug: String!, $path: String, $pagination: PaginationInput!) {\n  postTopic(\n    slug: $slug\n    path: $path\n    type: "SupportArticle"\n    pagination: $pagination\n  ) {\n    topic {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    subTopics {\n      id\n      title\n      slug\n      description\n      postCount\n      createdAt\n    }\n    pagedPosts {\n      items {\n        id\n        identifier\n        slug\n        status\n        title\n        description\n        content\n        metadata\n        updatedAt\n        createdAt\n      }\n      pagination {\n        itemIndex\n        itemIndexForPreviousPage\n        itemIndexForNextPage\n        itemsPerPage\n        itemsTotal\n        pagesTotal\n        page\n      }\n    }\n  }\n}\n\nmutation SupportTicketCreate($input: SupportTicketCreateInput!) {\n  supportTicketCreate(input: $input) {\n    id\n    type\n    status\n    userEmailAddress\n    title\n    description\n    comments {\n      content\n    }\n  }\n}\n\nmutation SupportTicketUpdateStatusPrivileged($id: String!, $status: SupportTicketStatus!) {\n  supportTicketUpdateStatusPrivileged(id: $id, status: $status) {\n    id\n    status\n  }\n}\n\nquery SupportTicketsPrivileged($pagination: PaginationInput!) {\n  supportTicketsPrivileged(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      assignedToProfileId\n      assignedToProfile {\n        username\n        displayName\n        images {\n          type\n          url\n          variant\n        }\n      }\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n      lastUserCommentedAt\n      answeredAt\n      answered\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nmutation SupportTicketAssign($ticketId: String!, $username: String) {\n  supportTicketAssign(ticketId: $ticketId, username: $username) {\n    id\n    assignedToProfileId\n    assignedToProfile {\n      username\n      displayName\n      images {\n        type\n        url\n        variant\n      }\n    }\n  }\n}\n\nmutation SupportTicketCommentCreatePrivileged($input: SupportTicketCommentCreateInput!) {\n  supportTicketCommentCreatePrivileged(input: $input) {\n    id\n    content\n    contentType\n    source\n    visibility\n    createdAt\n  }\n}\n\nquery SupportAllSupportProfiles {\n  supportAllSupportProfiles {\n    username\n    displayName\n    images {\n      type\n      url\n      variant\n    }\n  }\n}\n\nquery SupportTicketAccountAndCommerceOrdersPriveleged($email: String!, $pagination: PaginationInput!) {\n  accountPrivileged(input: {emailAddress: $email}) {\n    defaultProfileId\n    defaultProfile {\n      id\n      images {\n        type\n        url\n        variant\n      }\n      displayName\n      givenName\n      familyName\n      preferredName\n      username\n      createdAt\n    }\n    emailAddress\n    status\n  }\n  commerceOrdersPrivileged(pagination: $pagination) {\n    items {\n      id\n      fulfillmentStatus\n      emailAddress\n      identifier\n      lineItems {\n        createdAt\n        id\n        indexId\n        productVariantId\n        quantity\n        status\n        updatedAt\n      }\n      paymentStatus\n      priceInfo {\n        amount\n        currencyCode\n        originalSubtotal\n        subtotal\n        lineItemPrices {\n          indexId\n          originalSubtotal\n          subtotal\n        }\n        shippingRate {\n          amount\n          originalAmount\n        }\n        tax {\n          shipping\n          total\n        }\n      }\n      discounts {\n        code\n      }\n      source\n      status\n      metadata\n      createdAt\n      updatedAt\n      shippingInfo {\n        shippingAddress {\n          line1\n          line2\n          city\n          company\n          country\n          firstName\n          lastName\n          phoneNumber\n          postalCode\n          state\n        }\n      }\n    }\n    pagination {\n      pagesTotal\n      page\n      itemsTotal\n      itemsPerPage\n      itemIndexForPreviousPage\n      itemIndexForNextPage\n      itemIndex\n    }\n  }\n}\n\nquery ProfileSupportTickets($openTicketsIndex: Int!, $closedTicketsIndex: Int!) {\n  openTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $openTicketsIndex, filters: [{column: "status", operator: Equal, value: "Open"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n  closedTickets: supportTickets(\n    pagination: {itemsPerPage: 3, itemIndex: $closedTicketsIndex, filters: [{column: "status", operator: Equal, value: "Closed"}], orderBy: [{key: "createdAt", direction: Descending}]}\n  ) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n  }\n}\n\nquery ProfileSupportTicket($pagination: PaginationInput!) {\n  supportTickets(pagination: $pagination) {\n    items {\n      id\n      identifier\n      status\n      type\n      title\n      description\n      userEmailAddress\n      comments {\n        id\n        source\n        visibility\n        content\n        contentType\n        attachments {\n          type\n          url\n          variant\n        }\n        createdAt\n      }\n      createdAt\n      updatedAt\n    }\n  }\n}'];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(
    source: 'query WaitLists($pagination: PaginationInput!) {\n  waitLists(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      identifier\n      title\n      description\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListCreatePrivileged($data: WaitListCreationInput!) {\n  waitListCreatePrivileged(data: $data) {\n    id\n    identifier\n    title\n    description\n    updatedAt\n    createdAt\n  }\n}\n\nquery WaitListEntriesPrivileged($waitListIdentifier: String, $pagination: PaginationInput!) {\n  waitListEntriesPrivileged(\n    waitListIdentifier: $waitListIdentifier\n    pagination: $pagination\n  ) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      emailAddress\n      message\n      userAgent\n      countryCode\n      referredBy\n      contactedAt\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListEntryCreate($emailAddress: String!, $waitlistIdentifier: String! = "earlyAccess") {\n  waitListEntryCreate(\n    emailAddress: $emailAddress\n    waitListIdentifier: $waitlistIdentifier\n  ) {\n    id\n    emailAddress\n  }\n}',
): (typeof documents)['query WaitLists($pagination: PaginationInput!) {\n  waitLists(pagination: $pagination) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      identifier\n      title\n      description\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListCreatePrivileged($data: WaitListCreationInput!) {\n  waitListCreatePrivileged(data: $data) {\n    id\n    identifier\n    title\n    description\n    updatedAt\n    createdAt\n  }\n}\n\nquery WaitListEntriesPrivileged($waitListIdentifier: String, $pagination: PaginationInput!) {\n  waitListEntriesPrivileged(\n    waitListIdentifier: $waitListIdentifier\n    pagination: $pagination\n  ) {\n    pagination {\n      itemIndex\n      itemIndexForNextPage\n      itemIndexForPreviousPage\n      itemsPerPage\n      itemsTotal\n      page\n      pagesTotal\n    }\n    items {\n      id\n      emailAddress\n      message\n      userAgent\n      countryCode\n      referredBy\n      contactedAt\n      updatedAt\n      createdAt\n    }\n  }\n}\n\nmutation WaitListEntryCreate($emailAddress: String!, $waitlistIdentifier: String! = "earlyAccess") {\n  waitListEntryCreate(\n    emailAddress: $emailAddress\n    waitListIdentifier: $waitlistIdentifier\n  ) {\n    id\n    emailAddress\n  }\n}'];

export function graphql(source: string) {
    return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<
    infer TType,
    any
>
    ? TType
    : never;
