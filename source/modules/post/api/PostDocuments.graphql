# Posts Query
query Posts($pagination: PaginationInputWithFilters, $orderBy: OrderBy) {
    posts(input: $pagination, orderBy: $orderBy) {
        items {
            id
            identifier
            slug
            status
            title
            createdByProfileId
            createdByProfile {
                displayName
                username
                imageUrls {
                    url
                    type
                    variant
                }
            }
            content
            topic {
                name
            }
            reactions {
                content
                count
                reacted
            }
            upvoteCount
            downvoteCount
            voteType
            reportedCount
            reportStatus
            metadata
            latestRevisionId
            updatedAt
            createdAt
        }
        pagination {
            itemIndex
            itemIndexForPreviousPage
            itemIndexForNextPage
            itemsPerPage
            itemsTotal
            pagesTotal
            page
        }
    }
}

# Posts Mine Query
query PostsMine($pagination: PaginationInputWithFilters) {
    postsMine(input: $pagination) {
        items {
            id
            identifier
            slug
            status
            title
            createdByProfileId
            createdByProfile {
                displayName
                username
                imageUrls {
                    url
                    type
                    variant
                }
            }
            content
            topic {
                name
            }
            reactions {
                content
                count
                reacted
            }
            upvoteCount
            downvoteCount
            voteType
            reportedCount
            reportStatus
            metadata
            latestRevisionId
            updatedAt
            createdAt
        }
        pagination {
            itemIndex
            itemIndexForPreviousPage
            itemIndexForNextPage
            itemsPerPage
            itemsTotal
            pagesTotal
            page
        }
    }
}

# Post Query
query Post($identifier: String!) {
    post(identifier: $identifier) {
        id
        identifier
        slug
        status
        title
        createdByProfileId
        createdByProfile {
            displayName
            username
            imageUrls {
                url
                type
                variant
            }
        }
        content
        topics {
            id
            title
        }
        reactions {
            content
            count
            reacted
        }
        upvoteCount
        downvoteCount
        voteType
        reportedCount
        reportStatus
        type
        metadata
        latestRevisionId
        updatedAt
        createdAt
    }
}

# Post Create
mutation PostCreate($input: PostCreateInput!) {
    postCreateAdmin(input: $input) {
        id
        status
        title
        contentType
        content
        settings
        upvoteCount
        downvoteCount
        metadata
        updatedAt
        createdAt
    }
}

# Post Update
mutation PostUpdate($id: String!, $input: PostUpdateInput!) {
    postUpdate(id: $id, input: $input) {
        id
        status
        title
        contentType
        content
        settings
        upvoteCount
        downvoteCount
        metadata
        updatedAt
        createdAt
    }
}

# Post Delete
mutation PostDelete($id: String!) {
    postDelete(id: $id)
}

# Post Vote
mutation PostVote($postId: String!, $type: PostVoteType!) {
    postVote(postId: $postId, type: $type)
}

# Post Unvote
mutation PostUnvote($postId: String!) {
    postUnvote(postId: $postId)
}

# Post Reaction Create
mutation PostReactionCreate($postId: String!, $content: String!) {
    postReactionCreate(postId: $postId, content: $content)
}

# Post Reaction Delete
mutation PostReactionDelete($postId: String!, $content: String!) {
    postReactionDelete(postId: $postId, content: $content)
}

# Post Reaction Profiles
query PostReactionProfiles($postId: String!, $content: String!, $pagination: PaginationInput) {
    postReactionProfiles(postId: $postId, content: $content, pagination: $pagination) {
        items {
            username
            displayName
            profileId
        }
        pagination {
            itemIndex
            itemIndexForPreviousPage
            itemIndexForNextPage
            itemsPerPage
            itemsTotal
            pagesTotal
            page
        }
    }
}

# Post Report Create
mutation PostReportCreate($input: PostReportInput!) {
    postReportCreate(input: $input) {
        id
    }
}

# Post Topic Query
query PostTopicById($id: String!) {
    postTopicById(id: $id) {
        id
        title
        slug
        description
        postCount
        createdAt
    }
}

# Post Topics Query
query PostTopics($ids: [String!]) {
    postTopics(ids: $ids) {
        id
        title
        slug
        description
        postCount
        createdAt
    }
}

# Post Topic Create Mutation
mutation PostTopicCreate($input: PostTopicCreateInput!) {
    postTopicCreate(input: $input) {
        id
        title
        slug
        description
        postCount
        createdAt
    }
}

# Post Topic Update Mutation
mutation PostTopicUpdate($input: PostTopicUpdateInput!) {
    postTopicUpdate(input: $input) {
        id
        title
        slug
        description
        postCount
        createdAt
    }
}

# Post Topic Delete Mutation
mutation PostTopicDelete($id: String!) {
    postTopicDelete(id: $id)
}
