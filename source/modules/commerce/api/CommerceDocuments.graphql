# Commerce Cart Query
# query CommerceCart {
#     commerceCart {
#         id
#         identifier
#         createdAt
#         title
#         description
#         items {
#             id
#             quantity
#             firstName
#             lastName
#             relationship
#             emailAddress
#             productBundle {
#                 id
#                 items {
#                     quantity
#                     productVariant {
#                         id
#                         price {
#                             currencyCode
#                             amount
#                         }
#                         description
#                         name
#                     }
#                 }
#             }
#             shippingAddress {
#                 company
#                 line1
#                 line2
#                 city
#                 state
#                 postalCode
#                 country
#                 firstName
#                 lastName
#                 phoneNumber
#             }
#         }
#     }
# }

# Commerce Cart Update Mutation
# mutation CommerceCartUpdate($input: [ShoppingBagItemInput!]!) {
#     commerceCartUpdate(items: $input) {
#         id
#         identifier
#         title
#         description
#         items {
#             id
#             quantity
#             firstName
#             lastName
#             relationship
#             emailAddress
#             productBundle {
#                 id
#                 items {
#                     quantity
#                     productVariant {
#                         id
#                         price {
#                             currencyCode
#                             amount
#                         }
#                         description
#                         name
#                     }
#                 }
#             }
#             shippingAddress {
#                 company
#                 line1
#                 line2
#                 city
#                 state
#                 postalCode
#                 country
#                 firstName
#                 lastName
#                 phoneNumber
#             }
#         }
#     }
# }

# Commerce Shopping Bag Price Estimate Query
# query CommerceShoppingBagPriceEstimate($itemIds: [String!]!) {
#     commerceShoppingBagPriceEstimate(itemIds: $itemIds) {
#         amount
#         currencyCode
#         lineItemPrices {
#             amount
#             indexId
#             originalSubtotal
#             subtotal
#             tax
#         }
#         originalSubtotal
#         shippingRate {
#             amount
#             originalAmount
#             breakdown {
#                 freeShipping
#                 originalShippingRate
#                 shippingRate
#                 packageIndexId
#                 items {
#                     indexId
#                     quantity
#                 }
#             }
#         }
#         subtotal
#         tax {
#             shipping
#             total
#         }
#     }
# }

# Commerce Shopping Bag Checkout Mutation
# mutation CommerceShoppingBagCheckout($input: ShoppingBagCheckoutInput!) {
#     commerceShoppingBagCheckout(input: $input) {
#         id
#         batchIdentifier
#         holdOnShipping
#         fulfillmentStatus
#         emailAddress
#         identifier
#         payment {
#             amount
#             authorizedAt
#             cancelledAt
#             capturedAt
#             confirmedAt
#             createdAt
#             currencyCode
#             externalReferenceId
#             id
#             paymentProcessorType
#             status
#             statusDescription
#             updatedAt
#             walletEntryId
#         }
#         paymentId
#         paymentStatus
#         priceInfo {
#             amount
#             currencyCode
#             originalSubtotal
#             subtotal
#             lineItemPrices {
#                 amount
#                 indexId
#                 originalSubtotal
#                 subtotal
#                 tax
#             }
#             shippingRate {
#                 amount
#                 originalAmount
#             }
#             tax {
#                 shipping
#                 total
#             }
#         }
#         source
#         status
#         statusDescription
#         shippingInfo {
#             shippingAddress {
#                 company
#                 line1
#                 line2
#                 city
#                 state
#                 postalCode
#                 country
#                 firstName
#                 lastName
#                 phoneNumber
#             }
#         }
#         lineItems {
#             id
#             createdAt
#             updatedAt
#             indexId
#             quantity
#             fulfilledQuantity
#             shippedQuantity
#             status
#             statusDescription
#             productVariantId
#             commerceOrderId
#         }
#     }
# }

# Commerce Checkout Session Create Mutation
# mutation CommerceCheckoutSessionCreate($input: CommerceCheckoutSessionCreateInput!) {
#     commerceCheckoutSessionCreate(input: $input) {
#         id
#         status
#         orders {
#             id
#             status
#             paymentStatus
#         }
#         externalMetadata
#         failedCount
#         closedAt
#         completedAt
#         createdAt
#     }
# }

# Used to create a checkout session for a direct purchase
mutation CommerceCheckoutSessionCreateDirect($input: CommerceCheckoutSessionCreateDirectInput!) {
    commerceCheckoutSessionCreateDirect(input: $input) {
        id
        externalMetadata
        createdAt
    }
}

# After the Stripe checkout session is complete, the returnUrl comes back with an ID for us to poll
# This requires the user to have the same deviceId as the one that created the checkout session
# Use the query below instead
# query CommerceCheckoutSession($id: String!) {
#     commerceCheckoutSession(id: $id) {
#         id # The ID of the checkout session returned with the returnUrl
#         status # Pending is when the embedded form is created, Complete when Stripe is done processing
#         orders {
#             # Array of orders
#             identifier # The order identifier XXX-XXX-XXX
#             status # The overall order status
#             paymentStatus # The status of the payment, this should always be Captured
#             fulfillmentStatus # The status of the fulfillment
#             emailAddress # The email address for the order
#             lineItems {
#                 id
#                 status
#                 productVariantId # Use this for the product images, price, URLs, etc.
#                 quantity # The quantity ordered
#                 fulfilledQuantity
#                 shippedQuantity
#                 updatedAt
#                 createdAt
#             }
#             shippingInfo {
#                 shippingAddress {
#                     firstName
#                     lastName
#                     company
#                     phoneNumber
#                     line1
#                     line2
#                     city
#                     state
#                     postalCode
#                     country
#                 }
#             }
#             payment {
#                 paymentMethod {
#                     ... on PaymentMethodCreditCard {
#                         billingAddress {
#                             firstName
#                             lastName
#                             company
#                             phoneNumber
#                             line1
#                             line2
#                             city
#                             state
#                             postalCode
#                             country
#                         }
#                         type # Credit Card
#                         last4 # Last 4 digits of the card
#                         cardType # Visa or Mastercard, etc.
#                     }
#                 }
#             }
#             priceInfo {
#                 currencyCode # USD
#                 originalSubtotal # Before discount
#                 shippingRate {
#                     originalAmount # Before discount
#                     amount # After discount
#                 }
#                 tax {
#                     shipping
#                     total # Total tax
#                 }
#                 subtotal # After discount
#                 amount # Total amount billed to the card
#             }
#         }
#         completedAt # When Stripe is done processing
#         createdAt # When the checkout session was created
#     }
# }

# This query fetches the order details for a checkout session
# If the query includes the deviceId that created the session, more fields are returned
# If the query is public, less fields are returned
query CommerceOrdersByCheckoutSession($checkoutSessionId: String!) {
    commerceOrdersByCheckoutSession(checkoutSessionId: $checkoutSessionId) {
        ... on CommerceOrder {
            # Array of orders
            identifier # The order identifier XXX-XXX-XXX
            status # The overall order status
            paymentStatus # The status of the payment, this should always be Captured
            fulfillmentStatus # The status of the fulfillment
            emailAddress # The email address for the order
            lineItems {
                id
                indexId
                status
                productVariantId # Use this for the product images, price, URLs, etc.
                quantity # The quantity ordered
            }
            shippingInfo {
                shippingAddress {
                    firstName
                    lastName
                    company
                    phoneNumber
                    line1
                    line2
                    city
                    state
                    postalCode
                    country
                }
            }
            payment {
                paymentMethod {
                    ... on PaymentMethodCreditCard {
                        billingAddress {
                            firstName
                            lastName
                            company
                            phoneNumber
                            line1
                            line2
                            city
                            state
                            postalCode
                            country
                        }
                        type # Credit Card
                        last4 # Last 4 digits of the card
                        cardType # Visa or Mastercard, etc.
                    }
                }
            }
            priceInfo {
                currencyCode # USD
                originalSubtotal # Before discount
                shippingRate {
                    originalAmount # Before discount
                    amount # After discount
                }
                tax {
                    shipping
                    total # Total tax
                }
                subtotal # After discount
                amount # Total amount billed to the card
            }
            appliedDiscounts {
                amount
                code
                items {
                    indexId
                    unitAmount
                    amount
                }
            }
            createdAt
        }
        ... on PublicCommerceOrder {
            identifier
            status
            paymentStatus
            fulfillmentStatus
            lineItems {
                id
                indexId
                status
                productVariantId # Use this for the product images, price, URLs, etc.
                quantity # The quantity ordered
            }
            priceInfo {
                currencyCode # USD
                originalSubtotal # Before discount
                shippingRate {
                    originalAmount # Before discount
                    amount # After discount
                }
                tax {
                    shipping
                    total # Total tax
                }
                subtotal # After discount
                amount # Total amount billed to the card
            }
            appliedDiscounts {
                amount
                code
                items {
                    indexId
                    unitAmount
                    amount
                }
            }
            createdAt
        }
    }
}

# Commerce Orders Query
# List orders with pagination
query CommerceOrders($pagination: PaginationInput!) {
    commerceOrders(pagination: $pagination) {
        items {
            id
            identifier
            status
            paymentStatus
            fulfillmentStatus
            lineItems {
                id
                indexId
                status
                productVariantId # Use this for the product images, price, URLs, etc.
                quantity # The quantity ordered
            }
            priceInfo {
                amount
                originalSubtotal
            }
            appliedDiscounts {
                amount
                code
                items {
                    indexId
                    unitAmount
                    amount
                }
            }
            updatedAt
            createdAt
        }
        pagination {
            itemIndex
            itemIndexForPreviousPage
            itemIndexForNextPage
            itemsPerPage
            itemsTotal
            page
            pagesTotal
        }
    }
}

# Commerce Order Query
# Used to get a single order by identifier and email address
query CommerceOrder($orderIdentifier: String!) {
    commerceOrder(identifier: $orderIdentifier) {
        ... on CommerceOrder {
            identifier # The order identifier XXX-XXX-XXX
            status # The overall order status
            # Used to render the stepper
            statusRecords {
                status
                timestamp
                description
            }
            paymentStatus # The status of the payment, this should always be Captured
            fulfillmentStatus # The status of the fulfillment
            emailAddress # The email address for the order
            lineItems {
                id
                indexId
                status
                productVariantId # Use this for the product images, price, URLs, etc.
                quantity # The quantity ordered
                updatedAt
                createdAt
            }
            shipments {
                id
                orderIndexId
                status
                label {
                    carrier
                    serviceType
                    trackingNumber
                    trackingUrl
                }
                packageInfo {
                    items {
                        indexId # Ties to the linesItems[].indexId
                        quantity
                    }
                }
                shippedAt
                deliveredAt
                cancelledAt
                updatedAt
                createdAt
            }
            shippingInfo {
                shippingAddress {
                    firstName
                    lastName
                    company
                    phoneNumber
                    line1
                    line2
                    city
                    state
                    postalCode
                    country
                }
            }
            payment {
                paymentMethod {
                    ... on PaymentMethodCreditCard {
                        billingAddress {
                            firstName
                            lastName
                            company
                            phoneNumber
                            line1
                            line2
                            city
                            state
                            postalCode
                            country
                        }
                        type # Credit Card
                        last4 # Last 4 digits of the card
                        cardType # Visa or Mastercard, etc.
                    }
                }
            }
            priceInfo {
                currencyCode # USD
                originalSubtotal # Before discount
                shippingRate {
                    originalAmount # Before discount
                    amount # After discount
                }
                tax {
                    shipping
                    total # Total tax
                }
                subtotal # After discount
                amount # Total amount billed to the card
            }
            createdAt
            appliedDiscounts {
                amount
                code
                items {
                    indexId
                    unitAmount
                    amount
                }
            }
        }
        ... on PublicCommerceOrder {
            identifier
            status
            paymentStatus
            fulfillmentStatus
            lineItems {
                id
                status
                productVariantId # Use this for the product images, price, URLs, etc.
                quantity # The quantity ordered
            }
            priceInfo {
                currencyCode # USD
                originalSubtotal # Before discount
                shippingRate {
                    originalAmount # Before discount
                    amount # After discount
                }
                tax {
                    shipping
                    total # Total tax
                }
                subtotal # After discount
                amount # Total amount billed to the card
            }
            createdAt
        }
    }
}

# Commerce Orders Privileged Query
# For internal use only
query CommerceOrdersPrivileged($pagination: PaginationInput!) {
    commerceOrdersPrivileged(pagination: $pagination) {
        items {
            # batchIdentifier
            # beneficiaryEmailAddress
            # checkoutSessionId
            createdAt
            # discounts {
            #     code
            #     createdAt
            #     endsAt
            #     id
            #     startsAt
            #     type
            #     updatedAt
            #     usageCount
            # }
            emailAddress
            fulfillmentSource
            fulfillmentStatus
            # holdOnShipping
            id
            identifier
            lineItems {
                # commerceOrderId
                createdAt
                id
                indexId
                productVariantId
                quantity
                status
                updatedAt
            }
            metadata
            # orderLogs {
            #     commerceOrderId
            #     content
            #     id
            #     description
            #     createdAt
            #     source
            #     visibility
            # }
            payment {
                amount
                authorizedAt
                cancelledAt
                capturedAt
                confirmedAt
                createdAt
                currencyCode
                externalReferenceId
                id
                paymentMethod {
                    externalResourceId
                    paymentProcessorType
                    type
                    ... on PaymentMethodCreditCard {
                        externalResourceId
                        billingAddress {
                            city
                            company
                            country
                            firstName
                            lastName
                            line1
                            line2
                            postalCode
                            state
                            phoneNumber
                        }
                        cardType
                        expirationMonth
                        expirationYear
                        last4
                        paymentProcessorType
                        type
                    }
                    ... on PaymentMethodAppleInAppPurchase {
                        externalResourceId
                        paymentProcessorType
                        type
                    }
                }
                paymentProcessorType
                status
                updatedAt
                # walletEntryId
            }
            # paymentId
            paymentStatus
            priceInfo {
                amount
                currencyCode
                lineItemPrices {
                    # amount
                    indexId
                    originalSubtotal
                    subtotal
                    # tax
                }
                originalSubtotal
                shippingRate {
                    amount
                    # breakdown {
                    #     freeShipping
                    #     items {
                    #         indexId
                    #         quantity
                    #     }
                    #     originalShippingRate
                    #     packageIndexId
                    #     shippingRate
                    # }
                    originalAmount
                }
                subtotal
                tax {
                    shipping
                    total
                }
            }
            shipments {
                cancelledAt
                createdAt
                createdByAccountId
                createdByProfileId
                deliveredAt
                deliveryStatus
                id
                orderIndexId
                label {
                    carrier
                    # labelId
                    serviceType
                    # source
                    trackingNumber
                    trackingUrl
                }
                # orderSlip {
                #     storedObjectUrl
                # }
                shippedAt
                source
                status
                toAddress {
                    city
                    company
                    country
                    firstName
                    lastName
                    line1
                    line2
                    phoneNumber
                    state
                    postalCode
                }
                updatedAt
                updatedByAccountId
                updatedByProfileId
            }
            shippingInfo {
                shippingAddress {
                    city
                    country
                    company
                    lastName
                    firstName
                    line1
                    line2
                    phoneNumber
                    postalCode
                    state
                }
            }
            source
            status
            updatedAt
        }
        pagination {
            itemsTotal
            itemsPerPage
            page
            pagesTotal
            itemIndex
            itemIndexForNextPage
            itemIndexForPreviousPage
        }
    }
}
