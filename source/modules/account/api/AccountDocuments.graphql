# Account Registration or Sign In Create Mutation
# If the first challenge happens to be email, this will automatically send an email verification
# saving us from having to do that manually
mutation AccountRegistrationOrSignInCreate($input: AccountRegistrationOrSignInCreateInput!) {
    accountRegistrationOrSignInCreate(input: $input) {
        emailAddress
        authentication {
            status
            scopeType
            currentChallenge {
                challengeType
                status
            }
            updatedAt
            createdAt
        }
    }
}

# Account Registration Complete Mutation
# After this is complete, use AccountCurrent query to get the current account
mutation AccountRegistrationComplete($input: AccountRegistrationCompleteInput!) {
    accountRegistrationComplete(input: $input) {
        success
    }
}

# Account Sign In Complete Mutation
# After this is complete, use AccountCurrent query to get the current account
mutation AccountSignInComplete {
    accountSignInComplete {
        success
    }
}

# Account Authentication Query
# This is used to get the current authentication status
# Rather than parameters, this uses the authentication ID cookie to determine the current authentication status
query AuthenticationCurrent {
    authenticationCurrent {
        status
        scopeType
        currentChallenge {
            challengeType
            status
        }
        updatedAt
        createdAt
    }
}

# Challenge - Email Verification
# Email Verification Query
# This is used to get the status of the email verification challenge
query EmailVerification {
    emailVerification {
        verification {
            status
            emailAddress
            lastEmailSentAt
        }
        authentication {
            status
            scopeType
            currentChallenge {
                challengeType
                status
            }
            updatedAt
            createdAt
        }
    }
}

# Challenge - Email Verification
# Email Verification Send Mutation
# This is used to manually send an email verification email if the user requests another email
mutation EmailVerificationSend {
    emailVerificationSend {
        verification {
            status
            emailAddress
            lastEmailSentAt
        }
        authentication {
            status
            scopeType
            currentChallenge {
                challengeType
                status
            }
            updatedAt
            createdAt
        }
    }
}

# Challenge - Email Verification
# Email Verification Verify Mutation
# This is used to verify the email address with a code sent to the email address
mutation EmailVerificationVerify($input: EmailVerificationVerifyInput!) {
    emailVerificationVerify(input: $input) {
        verification {
            status
            emailAddress
            lastEmailSentAt
        }
        authentication {
            status
            scopeType
            currentChallenge {
                challengeType
                status
            }
            updatedAt
            createdAt
        }
    }
}

# Challenge - Account Password
# Account Password Verify Mutation
# This is used to verify the password of the account
mutation AccountPasswordVerify($input: AccountPasswordVerifyInput!) {
    accountPasswordVerify(input: $input) {
        success
        authentication {
            status
            scopeType
            currentChallenge {
                challengeType
                status
            }
            updatedAt
            createdAt
        }
    }
}

# Account Sign Out Mutation
mutation AccountSignOut {
    accountSignOut {
        success
    }
}

# Account Current Query
query AccountCurrent {
    accountCurrent {
        currentProfile {
            id
            createdAt
            updatedAt
            username
            displayName
            givenName
            familyName
            phoneNumber
            imageUrls {
                url
                variant
            }
        }
        primaryAccountEmail {
            id
            type
            isVerified
            emailAddress
            source
            updatedAt
            createdAt
        }
        roles {
            id
            expiresAt
            type
            status
            createdByAccountId
            updatedByAccountId
            createdByProfileId
            updatedByProfileId
            updatedAt
            createdAt
        }
        currentSession {
            currentProfileId
            status
            statusChangedAt
            updatedAt
            createdAt
        }
        createdAt
    }
}

# Account Profile Username Check Query
query AccountProfileUsernameValidate($username: String!) {
    accountProfileUsernameValidate(username: $username)
}

# Account Profile Update Mutation
mutation AccountProfileUpdate($input: AccountProfileUpdateInput!) {
    accountProfileUpdate(input: $input) {
        id
        username
        givenName
        preferredName
        middleName
        familyName
        displayName
        phoneNumber
        imageUrls {
            url
            variant
        }
        updatedAt
        createdAt
    }
}
